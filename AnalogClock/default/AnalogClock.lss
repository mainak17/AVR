
AnalogClock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  00000a9e  00000b32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800170  00800170  00000c42  2**0
                  ALLOC
  3 .debug_aranges 000000e0  00000000  00000000  00000c42  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001f4  00000000  00000000  00000d22  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000165d  00000000  00000000  00000f16  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bde  00000000  00000000  00002573  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e76  00000000  00000000  00003151  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  00003fc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000374  00000000  00000000  00004168  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000066e  00000000  00000000  000044dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000140  00000000  00000000  00004b4a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	11 e0       	ldi	r17, 0x01	; 1
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee e9       	ldi	r30, 0x9E	; 158
  3a:	fa e0       	ldi	r31, 0x0A	; 10
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a0 37       	cpi	r26, 0x70	; 112
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	11 e0       	ldi	r17, 0x01	; 1
  4a:	a0 e7       	ldi	r26, 0x70	; 112
  4c:	b1 e0       	ldi	r27, 0x01	; 1
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a7 37       	cpi	r26, 0x77	; 119
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	d5 d0       	rcall	.+426    	; 0x204 <main>
  5a:	1f c5       	rjmp	.+2622   	; 0xa9a <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <adc_init>:

unsigned int adcdata,adcdata1;

 void adc_init()
 {
  ADCSRA=0X86;						//ADC enable, ADC interrupt enable, set prescaller to 64
  5e:	86 e8       	ldi	r24, 0x86	; 134
  60:	86 b9       	out	0x06, r24	; 6
  		
 }
  62:	08 95       	ret

00000064 <getdata>:
 unsigned char getdata(unsigned char chno)	
  {
    ADMUX=0X60;						//right align the ADC result
  64:	90 e6       	ldi	r25, 0x60	; 96
  66:	97 b9       	out	0x07, r25	; 7
    ADMUX|=chno;					//select the ADC channel
  68:	97 b1       	in	r25, 0x07	; 7
  6a:	98 2b       	or	r25, r24
  6c:	97 b9       	out	0x07, r25	; 7
    ADCSRA|=0X40;					//start ADC convertion
  6e:	36 9a       	sbi	0x06, 6	; 6
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  70:	80 ea       	ldi	r24, 0xA0	; 160
  72:	9f e0       	ldi	r25, 0x0F	; 15
  74:	01 97       	sbiw	r24, 0x01	; 1
  76:	f1 f7       	brne	.-4      	; 0x74 <getdata+0x10>
    _delay_ms(1);					//give some time delay to complit the aDC convertion
	return ADCH;
  78:	85 b1       	in	r24, 0x05	; 5
  }
  7a:	08 95       	ret

0000007c <delay_ns_lcd>:
delay_ns_lcd(200);  
PORTB&=~0x20;
}

void delay_ns_lcd(unsigned char tim)
{
  7c:	20 91 70 01 	lds	r18, 0x0170
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	02 c0       	rjmp	.+4      	; 0x88 <delay_ns_lcd+0xc>
	for(j=0;j<tim;j++)
  84:	9f 5f       	subi	r25, 0xFF	; 255
  86:	2b e0       	ldi	r18, 0x0B	; 11
  88:	98 17       	cp	r25, r24
  8a:	e0 f3       	brcs	.-8      	; 0x84 <delay_ns_lcd+0x8>
  8c:	20 93 70 01 	sts	0x0170, r18
  90:	90 93 71 01 	sts	0x0171, r25
	{
		for(k=0;k<11;k++)
		{};
	}
}
  94:	08 95       	ret

00000096 <latch>:

}

void latch(void)
{
PORTB&=~0x20;
  96:	c5 98       	cbi	0x18, 5	; 24
delay_ns_lcd(200);  
  98:	88 ec       	ldi	r24, 0xC8	; 200
  9a:	f0 df       	rcall	.-32     	; 0x7c <delay_ns_lcd>
PORTB|=0x20;
  9c:	c5 9a       	sbi	0x18, 5	; 24
delay_ns_lcd(200);  
  9e:	88 ec       	ldi	r24, 0xC8	; 200
  a0:	ed df       	rcall	.-38     	; 0x7c <delay_ns_lcd>
PORTB&=~0x20;
  a2:	c5 98       	cbi	0x18, 5	; 24
}
  a4:	08 95       	ret

000000a6 <lcd_cmd>:
		{};
	}
}

void lcd_cmd(unsigned char cmd)
{   unsigned char cmd_temp=cmd;
  a6:	1f 93       	push	r17
  a8:	18 2f       	mov	r17, r24
	PORTB&=~0x30;
  aa:	88 b3       	in	r24, 0x18	; 24
  ac:	8f 7c       	andi	r24, 0xCF	; 207
  ae:	88 bb       	out	0x18, r24	; 24
	cmd_temp>>=4;
	PORTB=((cmd_temp & 0x0F));			
  b0:	81 2f       	mov	r24, r17
  b2:	82 95       	swap	r24
  b4:	8f 70       	andi	r24, 0x0F	; 15
  b6:	88 bb       	out	0x18, r24	; 24
	latch();
  b8:	ee df       	rcall	.-36     	; 0x96 <latch>
	PORTB=(cmd & 0x0F);	
  ba:	1f 70       	andi	r17, 0x0F	; 15
  bc:	18 bb       	out	0x18, r17	; 24
	latch();
  be:	eb df       	rcall	.-42     	; 0x96 <latch>
}
  c0:	1f 91       	pop	r17
  c2:	08 95       	ret

000000c4 <lcd_char>:


void lcd_char(unsigned char single)
{
  c4:	1f 93       	push	r17
  c6:	18 2f       	mov	r17, r24
    unsigned char temp_single=single;
	temp_single>>=4;
	PORTB=0x10;
  c8:	80 e1       	ldi	r24, 0x10	; 16
  ca:	88 bb       	out	0x18, r24	; 24
	PORTB=0x00;
  cc:	18 ba       	out	0x18, r1	; 24
	PORTB=(temp_single & 0x0F)|0x10;						
  ce:	81 2f       	mov	r24, r17
  d0:	82 95       	swap	r24
  d2:	8f 70       	andi	r24, 0x0F	; 15
  d4:	80 61       	ori	r24, 0x10	; 16
  d6:	88 bb       	out	0x18, r24	; 24
	latch();
  d8:	de df       	rcall	.-68     	; 0x96 <latch>
	PORTB=(single & 0x0F)|0x10;
  da:	1f 70       	andi	r17, 0x0F	; 15
  dc:	10 61       	ori	r17, 0x10	; 16
  de:	18 bb       	out	0x18, r17	; 24
	latch();
  e0:	da df       	rcall	.-76     	; 0x96 <latch>
}
  e2:	1f 91       	pop	r17
  e4:	08 95       	ret

000000e6 <lcd_string>:

void lcd_string(unsigned char *str)
{
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	ec 01       	movw	r28, r24
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <lcd_string+0xc>
	unsigned char k=0;

		while(*str!='\0')	//Till null character is encountered
		{
			lcd_char(*str);
  ee:	ea df       	rcall	.-44     	; 0xc4 <lcd_char>
			str++;
  f0:	21 96       	adiw	r28, 0x01	; 1

void lcd_string(unsigned char *str)
{
	unsigned char k=0;

		while(*str!='\0')	//Till null character is encountered
  f2:	88 81       	ld	r24, Y
  f4:	88 23       	and	r24, r24
  f6:	d9 f7       	brne	.-10     	; 0xee <lcd_string+0x8>
		{
			lcd_char(*str);
			str++;
		}
}
  f8:	df 91       	pop	r29
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <lcd_showvalue>:



void lcd_showvalue(unsigned char num)	//prints the decimal 3digit value of num
{
  fe:	ef 92       	push	r14
 100:	ff 92       	push	r15
 102:	0f 93       	push	r16
 104:	1f 93       	push	r17
 106:	18 2f       	mov	r17, r24
	unsigned char H=0,T=0,O=0;
	H=num/100;
 108:	64 e6       	ldi	r22, 0x64	; 100
 10a:	5d d4       	rcall	.+2234   	; 0x9c6 <__udivmodqi4>
 10c:	48 2f       	mov	r20, r24
	T=(num - (H*100))/10;
 10e:	28 2f       	mov	r18, r24
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	8c e9       	ldi	r24, 0x9C	; 156
 114:	9f ef       	ldi	r25, 0xFF	; 255
 116:	28 9f       	mul	r18, r24
 118:	70 01       	movw	r14, r0
 11a:	29 9f       	mul	r18, r25
 11c:	f0 0c       	add	r15, r0
 11e:	38 9f       	mul	r19, r24
 120:	f0 0c       	add	r15, r0
 122:	11 24       	eor	r1, r1
 124:	c7 01       	movw	r24, r14
 126:	81 0f       	add	r24, r17
 128:	91 1d       	adc	r25, r1
 12a:	6a e0       	ldi	r22, 0x0A	; 10
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	57 d4       	rcall	.+2222   	; 0x9de <__divmodhi4>
 130:	06 2f       	mov	r16, r22
	O=(num - (H*100) - (T*10));
	
	lcd_char(H+48);
 132:	84 2f       	mov	r24, r20
 134:	80 5d       	subi	r24, 0xD0	; 208
 136:	c6 df       	rcall	.-116    	; 0xc4 <lcd_char>
	lcd_char(T+48);
 138:	80 2f       	mov	r24, r16
 13a:	80 5d       	subi	r24, 0xD0	; 208
 13c:	c3 df       	rcall	.-122    	; 0xc4 <lcd_char>
	lcd_char(O+48);
 13e:	10 5d       	subi	r17, 0xD0	; 208
 140:	1e 0d       	add	r17, r14
 142:	86 ef       	ldi	r24, 0xF6	; 246
 144:	9f ef       	ldi	r25, 0xFF	; 255
 146:	08 9f       	mul	r16, r24
 148:	00 2d       	mov	r16, r0
 14a:	11 24       	eor	r1, r1
 14c:	80 2f       	mov	r24, r16
 14e:	81 0f       	add	r24, r17
 150:	b9 df       	rcall	.-142    	; 0xc4 <lcd_char>
}
 152:	1f 91       	pop	r17
 154:	0f 91       	pop	r16
 156:	ff 90       	pop	r15
 158:	ef 90       	pop	r14
 15a:	08 95       	ret

0000015c <lcd_gotoxy>:

void lcd_gotoxy(unsigned char row,unsigned char column)			//move cursor to the specified position
{
   if(row==0)
 15c:	88 23       	and	r24, r24
 15e:	21 f4       	brne	.+8      	; 0x168 <lcd_gotoxy+0xc>
    {
	 lcd_cmd(0x80+column);
 160:	86 2f       	mov	r24, r22
 162:	80 58       	subi	r24, 0x80	; 128
 164:	a0 df       	rcall	.-192    	; 0xa6 <lcd_cmd>
 166:	08 95       	ret
	}
   else if(row==1)
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	19 f4       	brne	.+6      	; 0x172 <lcd_gotoxy+0x16>
	{
	 lcd_cmd(0xC0+column);	
 16c:	86 2f       	mov	r24, r22
 16e:	80 54       	subi	r24, 0x40	; 64
 170:	9a df       	rcall	.-204    	; 0xa6 <lcd_cmd>
 172:	08 95       	ret

00000174 <delay_ms_lcd>:
	}	
}


void delay_ms_lcd(unsigned int ms)
{
 174:	0a c0       	rjmp	.+20     	; 0x18a <delay_ms_lcd+0x16>
	int i;

	while (ms-- > 0)
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
	{
		
		for (i = 0; i < 3276; ++i)
			asm("nop");
 17a:	00 00       	nop
	int i;

	while (ms-- > 0)
	{
		
		for (i = 0; i < 3276; ++i)
 17c:	2f 5f       	subi	r18, 0xFF	; 255
 17e:	3f 4f       	sbci	r19, 0xFF	; 255
 180:	4c e0       	ldi	r20, 0x0C	; 12
 182:	2c 3c       	cpi	r18, 0xCC	; 204
 184:	34 07       	cpc	r19, r20
 186:	c9 f7       	brne	.-14     	; 0x17a <delay_ms_lcd+0x6>
 188:	01 97       	sbiw	r24, 0x01	; 1

void delay_ms_lcd(unsigned int ms)
{
	int i;

	while (ms-- > 0)
 18a:	00 97       	sbiw	r24, 0x00	; 0
 18c:	a1 f7       	brne	.-24     	; 0x176 <delay_ms_lcd+0x2>
	{
		
		for (i = 0; i < 3276; ++i)
			asm("nop");
	}
}
 18e:	08 95       	ret

00000190 <lcd_init>:
void lcd_gotoxy(unsigned char row,unsigned char column);
void delay_ms_lcd(unsigned int ms);
void lcd_clear();

void lcd_init(void)	//init the lcd
{	
 190:	1f 93       	push	r17
  
	DDRB=0x3F;
 192:	8f e3       	ldi	r24, 0x3F	; 63
 194:	87 bb       	out	0x17, r24	; 23
	delay_ms_lcd(20);
 196:	84 e1       	ldi	r24, 0x14	; 20
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	ec df       	rcall	.-40     	; 0x174 <delay_ms_lcd>

	
	PORTB=0x03;		
 19c:	13 e0       	ldi	r17, 0x03	; 3
 19e:	18 bb       	out	0x18, r17	; 24
	latch();
 1a0:	7a df       	rcall	.-268    	; 0x96 <latch>
	delay_ms_lcd(5);
 1a2:	85 e0       	ldi	r24, 0x05	; 5
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	e6 df       	rcall	.-52     	; 0x174 <delay_ms_lcd>
	PORTB=0x03;
 1a8:	18 bb       	out	0x18, r17	; 24
	latch();
 1aa:	75 df       	rcall	.-278    	; 0x96 <latch>
	delay_ms_lcd(1);
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	e1 df       	rcall	.-62     	; 0x174 <delay_ms_lcd>
	PORTB=0x03;
 1b2:	18 bb       	out	0x18, r17	; 24
	latch();
 1b4:	70 df       	rcall	.-288    	; 0x96 <latch>
	delay_ms_lcd(1);
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	dc df       	rcall	.-72     	; 0x174 <delay_ms_lcd>
	PORTB=0x02;			//Enable 4 bit mode
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	88 bb       	out	0x18, r24	; 24
	latch();
 1c0:	6a df       	rcall	.-300    	; 0x96 <latch>
	delay_ms_lcd(5);		
 1c2:	85 e0       	ldi	r24, 0x05	; 5
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	d6 df       	rcall	.-84     	; 0x174 <delay_ms_lcd>
	
  	   
	lcd_cmd(0x28);		//Set interface 4 bit 2 line
 1c8:	88 e2       	ldi	r24, 0x28	; 40
 1ca:	6d df       	rcall	.-294    	; 0xa6 <lcd_cmd>
	delay_ms_lcd(1);
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	d1 df       	rcall	.-94     	; 0x174 <delay_ms_lcd>
	
	lcd_cmd(0x08);		//Enable display/cursor
 1d2:	88 e0       	ldi	r24, 0x08	; 8
 1d4:	68 df       	rcall	.-304    	; 0xa6 <lcd_cmd>
	delay_ms_lcd(1);
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	cc df       	rcall	.-104    	; 0x174 <delay_ms_lcd>
	
	lcd_cmd(0x01);		//clear the display
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	63 df       	rcall	.-314    	; 0xa6 <lcd_cmd>
	delay_ms_lcd(1);
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	c7 df       	rcall	.-114    	; 0x174 <delay_ms_lcd>
	
	lcd_cmd(0x06);		//Set cursor move, Move cursor right
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	5e df       	rcall	.-324    	; 0xa6 <lcd_cmd>
	delay_ms_lcd(1);
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	c2 df       	rcall	.-124    	; 0x174 <delay_ms_lcd>
	   
		
	lcd_cmd(0X0C);		//Turn on display
 1f0:	8c e0       	ldi	r24, 0x0C	; 12
 1f2:	59 df       	rcall	.-334    	; 0xa6 <lcd_cmd>
	delay_ms_lcd(2);
 1f4:	82 e0       	ldi	r24, 0x02	; 2
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	bd df       	rcall	.-134    	; 0x174 <delay_ms_lcd>

}
 1fa:	1f 91       	pop	r17
 1fc:	08 95       	ret

000001fe <lcd_clear>:
	}
}

void lcd_clear()
{
 lcd_cmd(0x01);
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	52 df       	rcall	.-348    	; 0xa6 <lcd_cmd>
}
 202:	08 95       	ret

00000204 <main>:
#include <util/delay.h>
#include"adc.h"
#include"lcd.h"

void main()
{   
 204:	3f 92       	push	r3
 206:	4f 92       	push	r4
 208:	5f 92       	push	r5
 20a:	6f 92       	push	r6
 20c:	7f 92       	push	r7
 20e:	8f 92       	push	r8
 210:	9f 92       	push	r9
 212:	af 92       	push	r10
 214:	bf 92       	push	r11
 216:	cf 92       	push	r12
 218:	df 92       	push	r13
 21a:	ef 92       	push	r14
 21c:	ff 92       	push	r15
 21e:	0f 93       	push	r16
 220:	1f 93       	push	r17
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
int i,s;
int clock;
int min;
int sec;
int x;
DDRB=0xFF;
 226:	8f ef       	ldi	r24, 0xFF	; 255
 228:	87 bb       	out	0x17, r24	; 23
//DDRC=0x0F;
DDRD=0x0F;
 22a:	8f e0       	ldi	r24, 0x0F	; 15
 22c:	81 bb       	out	0x11, r24	; 17

unsigned int adcdata,adcdata1;

 void adc_init()
 {
  ADCSRA=0X86;						//ADC enable, ADC interrupt enable, set prescaller to 64
 22e:	86 e8       	ldi	r24, 0x86	; 134
 230:	86 b9       	out	0x06, r24	; 6
adc_init();
lcd_init();
 232:	ae df       	rcall	.-164    	; 0x190 <lcd_init>
 234:	c0 e0       	ldi	r28, 0x00	; 0
 236:	d0 e0       	ldi	r29, 0x00	; 0
  		
 }
 unsigned char getdata(unsigned char chno)	
  {
    ADMUX=0X60;						//right align the ADC result
 238:	40 e6       	ldi	r20, 0x60	; 96
 23a:	34 2e       	mov	r3, r20
 23c:	30 ea       	ldi	r19, 0xA0	; 160
 23e:	63 2e       	mov	r6, r19
 240:	3f e0       	ldi	r19, 0x0F	; 15
 242:	73 2e       	mov	r7, r19
 244:	20 e9       	ldi	r18, 0x90	; 144
 246:	42 2e       	mov	r4, r18
 248:	21 e0       	ldi	r18, 0x01	; 1
 24a:	52 2e       	mov	r5, r18
 24c:	90 e2       	ldi	r25, 0x20	; 32
 24e:	89 2e       	mov	r8, r25
 250:	9e e4       	ldi	r25, 0x4E	; 78
 252:	99 2e       	mov	r9, r25
 254:	80 e6       	ldi	r24, 0x60	; 96
 256:	a8 2e       	mov	r10, r24
 258:	78 c0       	rjmp	.+240    	; 0x34a <main+0x146>
 25a:	a7 b8       	out	0x07, r10	; 7
    ADMUX|=chno;					//select the ADC channel
 25c:	87 b1       	in	r24, 0x07	; 7
 25e:	85 60       	ori	r24, 0x05	; 5
 260:	87 b9       	out	0x07, r24	; 7
    ADCSRA|=0X40;					//start ADC convertion
 262:	36 9a       	sbi	0x06, 6	; 6
 264:	c3 01       	movw	r24, r6
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <main+0x62>
    _delay_ms(1);					//give some time delay to complit the aDC convertion
	return ADCH;
 26a:	e5 b0       	in	r14, 0x05	; 5
		{
			for(int time=0;time<=100;time++)
			{
			//
			i=getdata(5);
lcd_gotoxy(0,0);
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	75 df       	rcall	.-278    	; 0x15c <lcd_gotoxy>
//_delay_ms(50);
lcd_showvalue(i);
 272:	8e 2d       	mov	r24, r14
 274:	44 df       	rcall	.-376    	; 0xfe <lcd_showvalue>
lcd_gotoxy(1,0);
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 df       	rcall	.-288    	; 0x15c <lcd_gotoxy>
x=(0.04*i);
 27c:	ff 24       	eor	r15, r15
 27e:	00 27       	eor	r16, r16
 280:	f7 fc       	sbrc	r15, 7
 282:	00 95       	com	r16
 284:	10 2f       	mov	r17, r16
 286:	c8 01       	movw	r24, r16
 288:	b7 01       	movw	r22, r14
 28a:	56 d1       	rcall	.+684    	; 0x538 <__floatsisf>
 28c:	2a e0       	ldi	r18, 0x0A	; 10
 28e:	37 ed       	ldi	r19, 0xD7	; 215
 290:	43 e2       	ldi	r20, 0x23	; 35
 292:	5d e3       	ldi	r21, 0x3D	; 61
 294:	5c d0       	rcall	.+184    	; 0x34e <__mulsf3>
 296:	aa d1       	rcall	.+852    	; 0x5ec <__fixsfsi>
 298:	8b 01       	movw	r16, r22
lcd_showvalue(x);
 29a:	86 2f       	mov	r24, r22
 29c:	30 df       	rcall	.-416    	; 0xfe <lcd_showvalue>
lcd_gotoxy(0,4);
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	64 e0       	ldi	r22, 0x04	; 4
 2a2:	5c df       	rcall	.-328    	; 0x15c <lcd_gotoxy>
lcd_string("ALARM");
 2a4:	80 e6       	ldi	r24, 0x60	; 96
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	1e df       	rcall	.-452    	; 0xe6 <lcd_string>

lcd_gotoxy(0,11);
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	6b e0       	ldi	r22, 0x0B	; 11
 2ae:	56 df       	rcall	.-340    	; 0x15c <lcd_gotoxy>
lcd_showvalue(x);
 2b0:	80 2f       	mov	r24, r16
 2b2:	25 df       	rcall	.-438    	; 0xfe <lcd_showvalue>

lcd_gotoxy(0,15);
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	6f e0       	ldi	r22, 0x0F	; 15
 2b8:	51 df       	rcall	.-350    	; 0x15c <lcd_gotoxy>
lcd_string("M");
 2ba:	86 e6       	ldi	r24, 0x66	; 102
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	13 df       	rcall	.-474    	; 0xe6 <lcd_string>
  ADCSRA=0X86;						//ADC enable, ADC interrupt enable, set prescaller to 64
  		
 }
 unsigned char getdata(unsigned char chno)	
  {
    ADMUX=0X60;						//right align the ADC result
 2c0:	37 b8       	out	0x07, r3	; 7
    ADMUX|=chno;					//select the ADC channel
 2c2:	3a 9a       	sbi	0x07, 2	; 7
    ADCSRA|=0X40;					//start ADC convertion
 2c4:	36 9a       	sbi	0x06, 6	; 6
 2c6:	c3 01       	movw	r24, r6
 2c8:	01 97       	sbiw	r24, 0x01	; 1
 2ca:	f1 f7       	brne	.-4      	; 0x2c8 <main+0xc4>
    _delay_ms(1);					//give some time delay to complit the aDC convertion
	return ADCH;
 2cc:	85 b1       	in	r24, 0x05	; 5

s=getdata(4);	
if(s<30)
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	4e 97       	sbiw	r24, 0x1e	; 30
 2d2:	3c f4       	brge	.+14     	; 0x2e2 <main+0xde>
 2d4:	88 eb       	ldi	r24, 0xB8	; 184
 2d6:	9b e0       	ldi	r25, 0x0B	; 11
 2d8:	f2 01       	movw	r30, r4
 2da:	31 97       	sbiw	r30, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <main+0xd6>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2de:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2e0:	d9 f7       	brne	.-10     	; 0x2d8 <main+0xd4>
clock=0;
_delay_ms(300);
clock++;
}
			//
			lcd_gotoxy(1,5);
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	65 e0       	ldi	r22, 0x05	; 5
 2e6:	3a df       	rcall	.-396    	; 0x15c <lcd_gotoxy>
			lcd_showvalue(min);
 2e8:	8c 2f       	mov	r24, r28
 2ea:	09 df       	rcall	.-494    	; 0xfe <lcd_showvalue>
 2ec:	c4 01       	movw	r24, r8
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	f1 f7       	brne	.-4      	; 0x2ee <main+0xea>
			_delay_ms(5);

			lcd_gotoxy(1,8);
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	68 e0       	ldi	r22, 0x08	; 8
 2f6:	32 df       	rcall	.-412    	; 0x15c <lcd_gotoxy>
			lcd_char(':');
 2f8:	8a e3       	ldi	r24, 0x3A	; 58
 2fa:	e4 de       	rcall	.-568    	; 0xc4 <lcd_char>
			
			lcd_gotoxy(1,10);
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	6a e0       	ldi	r22, 0x0A	; 10
 300:	2d df       	rcall	.-422    	; 0x15c <lcd_gotoxy>
			lcd_showvalue(sec);
 302:	8b 2d       	mov	r24, r11
 304:	fc de       	rcall	.-520    	; 0xfe <lcd_showvalue>
 306:	c4 01       	movw	r24, r8
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	f1 f7       	brne	.-4      	; 0x308 <main+0x104>
			_delay_ms(5);

			if((min==x))
 30c:	c0 17       	cp	r28, r16
 30e:	d1 07       	cpc	r29, r17
 310:	19 f4       	brne	.+6      	; 0x318 <main+0x114>
			{
				PORTD=0x01;
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	82 bb       	out	0x12, r24	; 18
 316:	04 c0       	rjmp	.+8      	; 0x320 <main+0x11c>
			}
			if((min>x))
 318:	0c 17       	cp	r16, r28
 31a:	1d 07       	cpc	r17, r29
 31c:	0c f4       	brge	.+2      	; 0x320 <main+0x11c>
			{
				PORTD=0x00;
 31e:	12 ba       	out	0x12, r1	; 18
	for(min=0;min<=5;min++)
	{
		
		for(sec=0;sec<10;sec++)
		{
			for(int time=0;time<=100;time++)
 320:	08 94       	sec
 322:	c1 1c       	adc	r12, r1
 324:	d1 1c       	adc	r13, r1
 326:	85 e6       	ldi	r24, 0x65	; 101
 328:	c8 16       	cp	r12, r24
 32a:	d1 04       	cpc	r13, r1
 32c:	09 f0       	breq	.+2      	; 0x330 <main+0x12c>
 32e:	95 cf       	rjmp	.-214    	; 0x25a <main+0x56>
 330:	b3 94       	inc	r11

	
	for(min=0;min<=5;min++)
	{
		
		for(sec=0;sec<10;sec++)
 332:	8a e0       	ldi	r24, 0x0A	; 10
 334:	b8 16       	cp	r11, r24
 336:	19 f0       	breq	.+6      	; 0x33e <main+0x13a>
 338:	cc 24       	eor	r12, r12
 33a:	dd 24       	eor	r13, r13
 33c:	8e cf       	rjmp	.-228    	; 0x25a <main+0x56>
while(1)
{


	
	for(min=0;min<=5;min++)
 33e:	21 96       	adiw	r28, 0x01	; 1
 340:	c6 30       	cpi	r28, 0x06	; 6
 342:	d1 05       	cpc	r29, r1
 344:	14 f0       	brlt	.+4      	; 0x34a <main+0x146>
 346:	c0 e0       	ldi	r28, 0x00	; 0
 348:	d0 e0       	ldi	r29, 0x00	; 0
 34a:	bb 24       	eor	r11, r11
 34c:	f5 cf       	rjmp	.-22     	; 0x338 <main+0x134>

0000034e <__mulsf3>:
 34e:	a0 e2       	ldi	r26, 0x20	; 32
 350:	b0 e0       	ldi	r27, 0x00	; 0
 352:	ec ea       	ldi	r30, 0xAC	; 172
 354:	f1 e0       	ldi	r31, 0x01	; 1
 356:	6a c3       	rjmp	.+1748   	; 0xa2c <__prologue_saves__>
 358:	69 83       	std	Y+1, r22	; 0x01
 35a:	7a 83       	std	Y+2, r23	; 0x02
 35c:	8b 83       	std	Y+3, r24	; 0x03
 35e:	9c 83       	std	Y+4, r25	; 0x04
 360:	2d 83       	std	Y+5, r18	; 0x05
 362:	3e 83       	std	Y+6, r19	; 0x06
 364:	4f 83       	std	Y+7, r20	; 0x07
 366:	58 87       	std	Y+8, r21	; 0x08
 368:	ce 01       	movw	r24, r28
 36a:	01 96       	adiw	r24, 0x01	; 1
 36c:	be 01       	movw	r22, r28
 36e:	67 5f       	subi	r22, 0xF7	; 247
 370:	7f 4f       	sbci	r23, 0xFF	; 255
 372:	b1 d2       	rcall	.+1378   	; 0x8d6 <__unpack_f>
 374:	ce 01       	movw	r24, r28
 376:	05 96       	adiw	r24, 0x05	; 5
 378:	be 01       	movw	r22, r28
 37a:	6f 5e       	subi	r22, 0xEF	; 239
 37c:	7f 4f       	sbci	r23, 0xFF	; 255
 37e:	ab d2       	rcall	.+1366   	; 0x8d6 <__unpack_f>
 380:	99 85       	ldd	r25, Y+9	; 0x09
 382:	92 30       	cpi	r25, 0x02	; 2
 384:	88 f0       	brcs	.+34     	; 0x3a8 <__mulsf3+0x5a>
 386:	89 89       	ldd	r24, Y+17	; 0x11
 388:	82 30       	cpi	r24, 0x02	; 2
 38a:	c8 f0       	brcs	.+50     	; 0x3be <__mulsf3+0x70>
 38c:	94 30       	cpi	r25, 0x04	; 4
 38e:	19 f4       	brne	.+6      	; 0x396 <__mulsf3+0x48>
 390:	82 30       	cpi	r24, 0x02	; 2
 392:	51 f4       	brne	.+20     	; 0x3a8 <__mulsf3+0x5a>
 394:	04 c0       	rjmp	.+8      	; 0x39e <__mulsf3+0x50>
 396:	84 30       	cpi	r24, 0x04	; 4
 398:	29 f4       	brne	.+10     	; 0x3a4 <__mulsf3+0x56>
 39a:	92 30       	cpi	r25, 0x02	; 2
 39c:	81 f4       	brne	.+32     	; 0x3be <__mulsf3+0x70>
 39e:	88 e6       	ldi	r24, 0x68	; 104
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	c6 c0       	rjmp	.+396    	; 0x530 <__stack+0xd1>
 3a4:	92 30       	cpi	r25, 0x02	; 2
 3a6:	49 f4       	brne	.+18     	; 0x3ba <__mulsf3+0x6c>
 3a8:	20 e0       	ldi	r18, 0x00	; 0
 3aa:	9a 85       	ldd	r25, Y+10	; 0x0a
 3ac:	8a 89       	ldd	r24, Y+18	; 0x12
 3ae:	98 13       	cpse	r25, r24
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	2a 87       	std	Y+10, r18	; 0x0a
 3b4:	ce 01       	movw	r24, r28
 3b6:	09 96       	adiw	r24, 0x09	; 9
 3b8:	bb c0       	rjmp	.+374    	; 0x530 <__stack+0xd1>
 3ba:	82 30       	cpi	r24, 0x02	; 2
 3bc:	49 f4       	brne	.+18     	; 0x3d0 <__mulsf3+0x82>
 3be:	20 e0       	ldi	r18, 0x00	; 0
 3c0:	9a 85       	ldd	r25, Y+10	; 0x0a
 3c2:	8a 89       	ldd	r24, Y+18	; 0x12
 3c4:	98 13       	cpse	r25, r24
 3c6:	21 e0       	ldi	r18, 0x01	; 1
 3c8:	2a 8b       	std	Y+18, r18	; 0x12
 3ca:	ce 01       	movw	r24, r28
 3cc:	41 96       	adiw	r24, 0x11	; 17
 3ce:	b0 c0       	rjmp	.+352    	; 0x530 <__stack+0xd1>
 3d0:	2d 84       	ldd	r2, Y+13	; 0x0d
 3d2:	3e 84       	ldd	r3, Y+14	; 0x0e
 3d4:	4f 84       	ldd	r4, Y+15	; 0x0f
 3d6:	58 88       	ldd	r5, Y+16	; 0x10
 3d8:	6d 88       	ldd	r6, Y+21	; 0x15
 3da:	7e 88       	ldd	r7, Y+22	; 0x16
 3dc:	8f 88       	ldd	r8, Y+23	; 0x17
 3de:	98 8c       	ldd	r9, Y+24	; 0x18
 3e0:	ee 24       	eor	r14, r14
 3e2:	ff 24       	eor	r15, r15
 3e4:	87 01       	movw	r16, r14
 3e6:	aa 24       	eor	r10, r10
 3e8:	bb 24       	eor	r11, r11
 3ea:	65 01       	movw	r12, r10
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	50 e0       	ldi	r21, 0x00	; 0
 3f0:	60 e0       	ldi	r22, 0x00	; 0
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	e0 e0       	ldi	r30, 0x00	; 0
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	c1 01       	movw	r24, r2
 3fa:	81 70       	andi	r24, 0x01	; 1
 3fc:	90 70       	andi	r25, 0x00	; 0
 3fe:	89 2b       	or	r24, r25
 400:	e9 f0       	breq	.+58     	; 0x43c <__mulsf3+0xee>
 402:	e6 0c       	add	r14, r6
 404:	f7 1c       	adc	r15, r7
 406:	08 1d       	adc	r16, r8
 408:	19 1d       	adc	r17, r9
 40a:	9a 01       	movw	r18, r20
 40c:	ab 01       	movw	r20, r22
 40e:	2a 0d       	add	r18, r10
 410:	3b 1d       	adc	r19, r11
 412:	4c 1d       	adc	r20, r12
 414:	5d 1d       	adc	r21, r13
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	a0 e0       	ldi	r26, 0x00	; 0
 41c:	b0 e0       	ldi	r27, 0x00	; 0
 41e:	e6 14       	cp	r14, r6
 420:	f7 04       	cpc	r15, r7
 422:	08 05       	cpc	r16, r8
 424:	19 05       	cpc	r17, r9
 426:	20 f4       	brcc	.+8      	; 0x430 <__mulsf3+0xe2>
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	a0 e0       	ldi	r26, 0x00	; 0
 42e:	b0 e0       	ldi	r27, 0x00	; 0
 430:	ba 01       	movw	r22, r20
 432:	a9 01       	movw	r20, r18
 434:	48 0f       	add	r20, r24
 436:	59 1f       	adc	r21, r25
 438:	6a 1f       	adc	r22, r26
 43a:	7b 1f       	adc	r23, r27
 43c:	aa 0c       	add	r10, r10
 43e:	bb 1c       	adc	r11, r11
 440:	cc 1c       	adc	r12, r12
 442:	dd 1c       	adc	r13, r13
 444:	97 fe       	sbrs	r9, 7
 446:	08 c0       	rjmp	.+16     	; 0x458 <__mulsf3+0x10a>
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	a0 e0       	ldi	r26, 0x00	; 0
 44e:	b0 e0       	ldi	r27, 0x00	; 0
 450:	a8 2a       	or	r10, r24
 452:	b9 2a       	or	r11, r25
 454:	ca 2a       	or	r12, r26
 456:	db 2a       	or	r13, r27
 458:	31 96       	adiw	r30, 0x01	; 1
 45a:	e0 32       	cpi	r30, 0x20	; 32
 45c:	f1 05       	cpc	r31, r1
 45e:	49 f0       	breq	.+18     	; 0x472 <__stack+0x13>
 460:	66 0c       	add	r6, r6
 462:	77 1c       	adc	r7, r7
 464:	88 1c       	adc	r8, r8
 466:	99 1c       	adc	r9, r9
 468:	56 94       	lsr	r5
 46a:	47 94       	ror	r4
 46c:	37 94       	ror	r3
 46e:	27 94       	ror	r2
 470:	c3 cf       	rjmp	.-122    	; 0x3f8 <__mulsf3+0xaa>
 472:	fa 85       	ldd	r31, Y+10	; 0x0a
 474:	ea 89       	ldd	r30, Y+18	; 0x12
 476:	2b 89       	ldd	r18, Y+19	; 0x13
 478:	3c 89       	ldd	r19, Y+20	; 0x14
 47a:	8b 85       	ldd	r24, Y+11	; 0x0b
 47c:	9c 85       	ldd	r25, Y+12	; 0x0c
 47e:	28 0f       	add	r18, r24
 480:	39 1f       	adc	r19, r25
 482:	2e 5f       	subi	r18, 0xFE	; 254
 484:	3f 4f       	sbci	r19, 0xFF	; 255
 486:	17 c0       	rjmp	.+46     	; 0x4b6 <__stack+0x57>
 488:	ca 01       	movw	r24, r20
 48a:	81 70       	andi	r24, 0x01	; 1
 48c:	90 70       	andi	r25, 0x00	; 0
 48e:	89 2b       	or	r24, r25
 490:	61 f0       	breq	.+24     	; 0x4aa <__stack+0x4b>
 492:	16 95       	lsr	r17
 494:	07 95       	ror	r16
 496:	f7 94       	ror	r15
 498:	e7 94       	ror	r14
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	a0 e0       	ldi	r26, 0x00	; 0
 4a0:	b0 e8       	ldi	r27, 0x80	; 128
 4a2:	e8 2a       	or	r14, r24
 4a4:	f9 2a       	or	r15, r25
 4a6:	0a 2b       	or	r16, r26
 4a8:	1b 2b       	or	r17, r27
 4aa:	76 95       	lsr	r23
 4ac:	67 95       	ror	r22
 4ae:	57 95       	ror	r21
 4b0:	47 95       	ror	r20
 4b2:	2f 5f       	subi	r18, 0xFF	; 255
 4b4:	3f 4f       	sbci	r19, 0xFF	; 255
 4b6:	77 fd       	sbrc	r23, 7
 4b8:	e7 cf       	rjmp	.-50     	; 0x488 <__stack+0x29>
 4ba:	0c c0       	rjmp	.+24     	; 0x4d4 <__stack+0x75>
 4bc:	44 0f       	add	r20, r20
 4be:	55 1f       	adc	r21, r21
 4c0:	66 1f       	adc	r22, r22
 4c2:	77 1f       	adc	r23, r23
 4c4:	17 fd       	sbrc	r17, 7
 4c6:	41 60       	ori	r20, 0x01	; 1
 4c8:	ee 0c       	add	r14, r14
 4ca:	ff 1c       	adc	r15, r15
 4cc:	00 1f       	adc	r16, r16
 4ce:	11 1f       	adc	r17, r17
 4d0:	21 50       	subi	r18, 0x01	; 1
 4d2:	30 40       	sbci	r19, 0x00	; 0
 4d4:	40 30       	cpi	r20, 0x00	; 0
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	59 07       	cpc	r21, r25
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	69 07       	cpc	r22, r25
 4de:	90 e4       	ldi	r25, 0x40	; 64
 4e0:	79 07       	cpc	r23, r25
 4e2:	60 f3       	brcs	.-40     	; 0x4bc <__stack+0x5d>
 4e4:	2b 8f       	std	Y+27, r18	; 0x1b
 4e6:	3c 8f       	std	Y+28, r19	; 0x1c
 4e8:	db 01       	movw	r26, r22
 4ea:	ca 01       	movw	r24, r20
 4ec:	8f 77       	andi	r24, 0x7F	; 127
 4ee:	90 70       	andi	r25, 0x00	; 0
 4f0:	a0 70       	andi	r26, 0x00	; 0
 4f2:	b0 70       	andi	r27, 0x00	; 0
 4f4:	80 34       	cpi	r24, 0x40	; 64
 4f6:	91 05       	cpc	r25, r1
 4f8:	a1 05       	cpc	r26, r1
 4fa:	b1 05       	cpc	r27, r1
 4fc:	61 f4       	brne	.+24     	; 0x516 <__stack+0xb7>
 4fe:	47 fd       	sbrc	r20, 7
 500:	0a c0       	rjmp	.+20     	; 0x516 <__stack+0xb7>
 502:	e1 14       	cp	r14, r1
 504:	f1 04       	cpc	r15, r1
 506:	01 05       	cpc	r16, r1
 508:	11 05       	cpc	r17, r1
 50a:	29 f0       	breq	.+10     	; 0x516 <__stack+0xb7>
 50c:	40 5c       	subi	r20, 0xC0	; 192
 50e:	5f 4f       	sbci	r21, 0xFF	; 255
 510:	6f 4f       	sbci	r22, 0xFF	; 255
 512:	7f 4f       	sbci	r23, 0xFF	; 255
 514:	40 78       	andi	r20, 0x80	; 128
 516:	1a 8e       	std	Y+26, r1	; 0x1a
 518:	fe 17       	cp	r31, r30
 51a:	11 f0       	breq	.+4      	; 0x520 <__stack+0xc1>
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	8a 8f       	std	Y+26, r24	; 0x1a
 520:	4d 8f       	std	Y+29, r20	; 0x1d
 522:	5e 8f       	std	Y+30, r21	; 0x1e
 524:	6f 8f       	std	Y+31, r22	; 0x1f
 526:	78 a3       	std	Y+32, r23	; 0x20
 528:	83 e0       	ldi	r24, 0x03	; 3
 52a:	89 8f       	std	Y+25, r24	; 0x19
 52c:	ce 01       	movw	r24, r28
 52e:	49 96       	adiw	r24, 0x19	; 25
 530:	fd d0       	rcall	.+506    	; 0x72c <__pack_f>
 532:	a0 96       	adiw	r28, 0x20	; 32
 534:	e2 e1       	ldi	r30, 0x12	; 18
 536:	96 c2       	rjmp	.+1324   	; 0xa64 <__epilogue_restores__>

00000538 <__floatsisf>:
 538:	a8 e0       	ldi	r26, 0x08	; 8
 53a:	b0 e0       	ldi	r27, 0x00	; 0
 53c:	e1 ea       	ldi	r30, 0xA1	; 161
 53e:	f2 e0       	ldi	r31, 0x02	; 2
 540:	7e c2       	rjmp	.+1276   	; 0xa3e <__prologue_saves__+0x12>
 542:	9b 01       	movw	r18, r22
 544:	ac 01       	movw	r20, r24
 546:	83 e0       	ldi	r24, 0x03	; 3
 548:	89 83       	std	Y+1, r24	; 0x01
 54a:	da 01       	movw	r26, r20
 54c:	c9 01       	movw	r24, r18
 54e:	88 27       	eor	r24, r24
 550:	b7 fd       	sbrc	r27, 7
 552:	83 95       	inc	r24
 554:	99 27       	eor	r25, r25
 556:	aa 27       	eor	r26, r26
 558:	bb 27       	eor	r27, r27
 55a:	b8 2e       	mov	r11, r24
 55c:	21 15       	cp	r18, r1
 55e:	31 05       	cpc	r19, r1
 560:	41 05       	cpc	r20, r1
 562:	51 05       	cpc	r21, r1
 564:	19 f4       	brne	.+6      	; 0x56c <__floatsisf+0x34>
 566:	82 e0       	ldi	r24, 0x02	; 2
 568:	89 83       	std	Y+1, r24	; 0x01
 56a:	39 c0       	rjmp	.+114    	; 0x5de <__floatsisf+0xa6>
 56c:	88 23       	and	r24, r24
 56e:	a9 f0       	breq	.+42     	; 0x59a <__floatsisf+0x62>
 570:	20 30       	cpi	r18, 0x00	; 0
 572:	80 e0       	ldi	r24, 0x00	; 0
 574:	38 07       	cpc	r19, r24
 576:	80 e0       	ldi	r24, 0x00	; 0
 578:	48 07       	cpc	r20, r24
 57a:	80 e8       	ldi	r24, 0x80	; 128
 57c:	58 07       	cpc	r21, r24
 57e:	29 f4       	brne	.+10     	; 0x58a <__floatsisf+0x52>
 580:	60 e0       	ldi	r22, 0x00	; 0
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	9f ec       	ldi	r25, 0xCF	; 207
 588:	2e c0       	rjmp	.+92     	; 0x5e6 <__floatsisf+0xae>
 58a:	ee 24       	eor	r14, r14
 58c:	ff 24       	eor	r15, r15
 58e:	87 01       	movw	r16, r14
 590:	e2 1a       	sub	r14, r18
 592:	f3 0a       	sbc	r15, r19
 594:	04 0b       	sbc	r16, r20
 596:	15 0b       	sbc	r17, r21
 598:	02 c0       	rjmp	.+4      	; 0x59e <__floatsisf+0x66>
 59a:	79 01       	movw	r14, r18
 59c:	8a 01       	movw	r16, r20
 59e:	8e e1       	ldi	r24, 0x1E	; 30
 5a0:	c8 2e       	mov	r12, r24
 5a2:	d1 2c       	mov	r13, r1
 5a4:	dc 82       	std	Y+4, r13	; 0x04
 5a6:	cb 82       	std	Y+3, r12	; 0x03
 5a8:	ed 82       	std	Y+5, r14	; 0x05
 5aa:	fe 82       	std	Y+6, r15	; 0x06
 5ac:	0f 83       	std	Y+7, r16	; 0x07
 5ae:	18 87       	std	Y+8, r17	; 0x08
 5b0:	c8 01       	movw	r24, r16
 5b2:	b7 01       	movw	r22, r14
 5b4:	6c d0       	rcall	.+216    	; 0x68e <__clzsi2>
 5b6:	01 97       	sbiw	r24, 0x01	; 1
 5b8:	18 16       	cp	r1, r24
 5ba:	19 06       	cpc	r1, r25
 5bc:	84 f4       	brge	.+32     	; 0x5de <__floatsisf+0xa6>
 5be:	08 2e       	mov	r0, r24
 5c0:	04 c0       	rjmp	.+8      	; 0x5ca <__floatsisf+0x92>
 5c2:	ee 0c       	add	r14, r14
 5c4:	ff 1c       	adc	r15, r15
 5c6:	00 1f       	adc	r16, r16
 5c8:	11 1f       	adc	r17, r17
 5ca:	0a 94       	dec	r0
 5cc:	d2 f7       	brpl	.-12     	; 0x5c2 <__floatsisf+0x8a>
 5ce:	ed 82       	std	Y+5, r14	; 0x05
 5d0:	fe 82       	std	Y+6, r15	; 0x06
 5d2:	0f 83       	std	Y+7, r16	; 0x07
 5d4:	18 87       	std	Y+8, r17	; 0x08
 5d6:	c8 1a       	sub	r12, r24
 5d8:	d9 0a       	sbc	r13, r25
 5da:	dc 82       	std	Y+4, r13	; 0x04
 5dc:	cb 82       	std	Y+3, r12	; 0x03
 5de:	ba 82       	std	Y+2, r11	; 0x02
 5e0:	ce 01       	movw	r24, r28
 5e2:	01 96       	adiw	r24, 0x01	; 1
 5e4:	a3 d0       	rcall	.+326    	; 0x72c <__pack_f>
 5e6:	28 96       	adiw	r28, 0x08	; 8
 5e8:	e9 e0       	ldi	r30, 0x09	; 9
 5ea:	45 c2       	rjmp	.+1162   	; 0xa76 <__epilogue_restores__+0x12>

000005ec <__fixsfsi>:
 5ec:	ac e0       	ldi	r26, 0x0C	; 12
 5ee:	b0 e0       	ldi	r27, 0x00	; 0
 5f0:	eb ef       	ldi	r30, 0xFB	; 251
 5f2:	f2 e0       	ldi	r31, 0x02	; 2
 5f4:	2b c2       	rjmp	.+1110   	; 0xa4c <__prologue_saves__+0x20>
 5f6:	69 83       	std	Y+1, r22	; 0x01
 5f8:	7a 83       	std	Y+2, r23	; 0x02
 5fa:	8b 83       	std	Y+3, r24	; 0x03
 5fc:	9c 83       	std	Y+4, r25	; 0x04
 5fe:	ce 01       	movw	r24, r28
 600:	01 96       	adiw	r24, 0x01	; 1
 602:	be 01       	movw	r22, r28
 604:	6b 5f       	subi	r22, 0xFB	; 251
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	66 d1       	rcall	.+716    	; 0x8d6 <__unpack_f>
 60a:	8d 81       	ldd	r24, Y+5	; 0x05
 60c:	82 30       	cpi	r24, 0x02	; 2
 60e:	61 f1       	breq	.+88     	; 0x668 <__fixsfsi+0x7c>
 610:	82 30       	cpi	r24, 0x02	; 2
 612:	50 f1       	brcs	.+84     	; 0x668 <__fixsfsi+0x7c>
 614:	84 30       	cpi	r24, 0x04	; 4
 616:	21 f4       	brne	.+8      	; 0x620 <__fixsfsi+0x34>
 618:	8e 81       	ldd	r24, Y+6	; 0x06
 61a:	88 23       	and	r24, r24
 61c:	51 f1       	breq	.+84     	; 0x672 <__fixsfsi+0x86>
 61e:	2e c0       	rjmp	.+92     	; 0x67c <__fixsfsi+0x90>
 620:	2f 81       	ldd	r18, Y+7	; 0x07
 622:	38 85       	ldd	r19, Y+8	; 0x08
 624:	37 fd       	sbrc	r19, 7
 626:	20 c0       	rjmp	.+64     	; 0x668 <__fixsfsi+0x7c>
 628:	6e 81       	ldd	r22, Y+6	; 0x06
 62a:	2f 31       	cpi	r18, 0x1F	; 31
 62c:	31 05       	cpc	r19, r1
 62e:	1c f0       	brlt	.+6      	; 0x636 <__fixsfsi+0x4a>
 630:	66 23       	and	r22, r22
 632:	f9 f0       	breq	.+62     	; 0x672 <__fixsfsi+0x86>
 634:	23 c0       	rjmp	.+70     	; 0x67c <__fixsfsi+0x90>
 636:	8e e1       	ldi	r24, 0x1E	; 30
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	82 1b       	sub	r24, r18
 63c:	93 0b       	sbc	r25, r19
 63e:	29 85       	ldd	r18, Y+9	; 0x09
 640:	3a 85       	ldd	r19, Y+10	; 0x0a
 642:	4b 85       	ldd	r20, Y+11	; 0x0b
 644:	5c 85       	ldd	r21, Y+12	; 0x0c
 646:	04 c0       	rjmp	.+8      	; 0x650 <__fixsfsi+0x64>
 648:	56 95       	lsr	r21
 64a:	47 95       	ror	r20
 64c:	37 95       	ror	r19
 64e:	27 95       	ror	r18
 650:	8a 95       	dec	r24
 652:	d2 f7       	brpl	.-12     	; 0x648 <__fixsfsi+0x5c>
 654:	66 23       	and	r22, r22
 656:	b1 f0       	breq	.+44     	; 0x684 <__fixsfsi+0x98>
 658:	50 95       	com	r21
 65a:	40 95       	com	r20
 65c:	30 95       	com	r19
 65e:	21 95       	neg	r18
 660:	3f 4f       	sbci	r19, 0xFF	; 255
 662:	4f 4f       	sbci	r20, 0xFF	; 255
 664:	5f 4f       	sbci	r21, 0xFF	; 255
 666:	0e c0       	rjmp	.+28     	; 0x684 <__fixsfsi+0x98>
 668:	20 e0       	ldi	r18, 0x00	; 0
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	40 e0       	ldi	r20, 0x00	; 0
 66e:	50 e0       	ldi	r21, 0x00	; 0
 670:	09 c0       	rjmp	.+18     	; 0x684 <__fixsfsi+0x98>
 672:	2f ef       	ldi	r18, 0xFF	; 255
 674:	3f ef       	ldi	r19, 0xFF	; 255
 676:	4f ef       	ldi	r20, 0xFF	; 255
 678:	5f e7       	ldi	r21, 0x7F	; 127
 67a:	04 c0       	rjmp	.+8      	; 0x684 <__fixsfsi+0x98>
 67c:	20 e0       	ldi	r18, 0x00	; 0
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	40 e0       	ldi	r20, 0x00	; 0
 682:	50 e8       	ldi	r21, 0x80	; 128
 684:	b9 01       	movw	r22, r18
 686:	ca 01       	movw	r24, r20
 688:	2c 96       	adiw	r28, 0x0c	; 12
 68a:	e2 e0       	ldi	r30, 0x02	; 2
 68c:	fb c1       	rjmp	.+1014   	; 0xa84 <__epilogue_restores__+0x20>

0000068e <__clzsi2>:
 68e:	ef 92       	push	r14
 690:	ff 92       	push	r15
 692:	0f 93       	push	r16
 694:	1f 93       	push	r17
 696:	7b 01       	movw	r14, r22
 698:	8c 01       	movw	r16, r24
 69a:	80 e0       	ldi	r24, 0x00	; 0
 69c:	e8 16       	cp	r14, r24
 69e:	80 e0       	ldi	r24, 0x00	; 0
 6a0:	f8 06       	cpc	r15, r24
 6a2:	81 e0       	ldi	r24, 0x01	; 1
 6a4:	08 07       	cpc	r16, r24
 6a6:	80 e0       	ldi	r24, 0x00	; 0
 6a8:	18 07       	cpc	r17, r24
 6aa:	88 f4       	brcc	.+34     	; 0x6ce <__clzsi2+0x40>
 6ac:	8f ef       	ldi	r24, 0xFF	; 255
 6ae:	e8 16       	cp	r14, r24
 6b0:	f1 04       	cpc	r15, r1
 6b2:	01 05       	cpc	r16, r1
 6b4:	11 05       	cpc	r17, r1
 6b6:	31 f0       	breq	.+12     	; 0x6c4 <__clzsi2+0x36>
 6b8:	28 f0       	brcs	.+10     	; 0x6c4 <__clzsi2+0x36>
 6ba:	88 e0       	ldi	r24, 0x08	; 8
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	a0 e0       	ldi	r26, 0x00	; 0
 6c0:	b0 e0       	ldi	r27, 0x00	; 0
 6c2:	17 c0       	rjmp	.+46     	; 0x6f2 <__clzsi2+0x64>
 6c4:	80 e0       	ldi	r24, 0x00	; 0
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	a0 e0       	ldi	r26, 0x00	; 0
 6ca:	b0 e0       	ldi	r27, 0x00	; 0
 6cc:	12 c0       	rjmp	.+36     	; 0x6f2 <__clzsi2+0x64>
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	e8 16       	cp	r14, r24
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	f8 06       	cpc	r15, r24
 6d6:	80 e0       	ldi	r24, 0x00	; 0
 6d8:	08 07       	cpc	r16, r24
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	18 07       	cpc	r17, r24
 6de:	28 f0       	brcs	.+10     	; 0x6ea <__clzsi2+0x5c>
 6e0:	88 e1       	ldi	r24, 0x18	; 24
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	a0 e0       	ldi	r26, 0x00	; 0
 6e6:	b0 e0       	ldi	r27, 0x00	; 0
 6e8:	04 c0       	rjmp	.+8      	; 0x6f2 <__clzsi2+0x64>
 6ea:	80 e1       	ldi	r24, 0x10	; 16
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	a0 e0       	ldi	r26, 0x00	; 0
 6f0:	b0 e0       	ldi	r27, 0x00	; 0
 6f2:	20 e2       	ldi	r18, 0x20	; 32
 6f4:	30 e0       	ldi	r19, 0x00	; 0
 6f6:	40 e0       	ldi	r20, 0x00	; 0
 6f8:	50 e0       	ldi	r21, 0x00	; 0
 6fa:	28 1b       	sub	r18, r24
 6fc:	39 0b       	sbc	r19, r25
 6fe:	4a 0b       	sbc	r20, r26
 700:	5b 0b       	sbc	r21, r27
 702:	04 c0       	rjmp	.+8      	; 0x70c <__clzsi2+0x7e>
 704:	16 95       	lsr	r17
 706:	07 95       	ror	r16
 708:	f7 94       	ror	r15
 70a:	e7 94       	ror	r14
 70c:	8a 95       	dec	r24
 70e:	d2 f7       	brpl	.-12     	; 0x704 <__clzsi2+0x76>
 710:	f7 01       	movw	r30, r14
 712:	e0 59       	subi	r30, 0x90	; 144
 714:	ff 4f       	sbci	r31, 0xFF	; 255
 716:	80 81       	ld	r24, Z
 718:	28 1b       	sub	r18, r24
 71a:	31 09       	sbc	r19, r1
 71c:	41 09       	sbc	r20, r1
 71e:	51 09       	sbc	r21, r1
 720:	c9 01       	movw	r24, r18
 722:	1f 91       	pop	r17
 724:	0f 91       	pop	r16
 726:	ff 90       	pop	r15
 728:	ef 90       	pop	r14
 72a:	08 95       	ret

0000072c <__pack_f>:
 72c:	df 92       	push	r13
 72e:	ef 92       	push	r14
 730:	ff 92       	push	r15
 732:	0f 93       	push	r16
 734:	1f 93       	push	r17
 736:	fc 01       	movw	r30, r24
 738:	e4 80       	ldd	r14, Z+4	; 0x04
 73a:	f5 80       	ldd	r15, Z+5	; 0x05
 73c:	06 81       	ldd	r16, Z+6	; 0x06
 73e:	17 81       	ldd	r17, Z+7	; 0x07
 740:	d1 80       	ldd	r13, Z+1	; 0x01
 742:	80 81       	ld	r24, Z
 744:	82 30       	cpi	r24, 0x02	; 2
 746:	48 f4       	brcc	.+18     	; 0x75a <__pack_f+0x2e>
 748:	80 e0       	ldi	r24, 0x00	; 0
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	a0 e1       	ldi	r26, 0x10	; 16
 74e:	b0 e0       	ldi	r27, 0x00	; 0
 750:	e8 2a       	or	r14, r24
 752:	f9 2a       	or	r15, r25
 754:	0a 2b       	or	r16, r26
 756:	1b 2b       	or	r17, r27
 758:	a5 c0       	rjmp	.+330    	; 0x8a4 <__pack_f+0x178>
 75a:	84 30       	cpi	r24, 0x04	; 4
 75c:	09 f4       	brne	.+2      	; 0x760 <__pack_f+0x34>
 75e:	9f c0       	rjmp	.+318    	; 0x89e <__pack_f+0x172>
 760:	82 30       	cpi	r24, 0x02	; 2
 762:	21 f4       	brne	.+8      	; 0x76c <__pack_f+0x40>
 764:	ee 24       	eor	r14, r14
 766:	ff 24       	eor	r15, r15
 768:	87 01       	movw	r16, r14
 76a:	05 c0       	rjmp	.+10     	; 0x776 <__pack_f+0x4a>
 76c:	e1 14       	cp	r14, r1
 76e:	f1 04       	cpc	r15, r1
 770:	01 05       	cpc	r16, r1
 772:	11 05       	cpc	r17, r1
 774:	19 f4       	brne	.+6      	; 0x77c <__pack_f+0x50>
 776:	e0 e0       	ldi	r30, 0x00	; 0
 778:	f0 e0       	ldi	r31, 0x00	; 0
 77a:	96 c0       	rjmp	.+300    	; 0x8a8 <__pack_f+0x17c>
 77c:	62 81       	ldd	r22, Z+2	; 0x02
 77e:	73 81       	ldd	r23, Z+3	; 0x03
 780:	9f ef       	ldi	r25, 0xFF	; 255
 782:	62 38       	cpi	r22, 0x82	; 130
 784:	79 07       	cpc	r23, r25
 786:	0c f0       	brlt	.+2      	; 0x78a <__pack_f+0x5e>
 788:	5b c0       	rjmp	.+182    	; 0x840 <__pack_f+0x114>
 78a:	22 e8       	ldi	r18, 0x82	; 130
 78c:	3f ef       	ldi	r19, 0xFF	; 255
 78e:	26 1b       	sub	r18, r22
 790:	37 0b       	sbc	r19, r23
 792:	2a 31       	cpi	r18, 0x1A	; 26
 794:	31 05       	cpc	r19, r1
 796:	2c f0       	brlt	.+10     	; 0x7a2 <__pack_f+0x76>
 798:	20 e0       	ldi	r18, 0x00	; 0
 79a:	30 e0       	ldi	r19, 0x00	; 0
 79c:	40 e0       	ldi	r20, 0x00	; 0
 79e:	50 e0       	ldi	r21, 0x00	; 0
 7a0:	2a c0       	rjmp	.+84     	; 0x7f6 <__pack_f+0xca>
 7a2:	b8 01       	movw	r22, r16
 7a4:	a7 01       	movw	r20, r14
 7a6:	02 2e       	mov	r0, r18
 7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <__pack_f+0x86>
 7aa:	76 95       	lsr	r23
 7ac:	67 95       	ror	r22
 7ae:	57 95       	ror	r21
 7b0:	47 95       	ror	r20
 7b2:	0a 94       	dec	r0
 7b4:	d2 f7       	brpl	.-12     	; 0x7aa <__pack_f+0x7e>
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	a0 e0       	ldi	r26, 0x00	; 0
 7bc:	b0 e0       	ldi	r27, 0x00	; 0
 7be:	04 c0       	rjmp	.+8      	; 0x7c8 <__pack_f+0x9c>
 7c0:	88 0f       	add	r24, r24
 7c2:	99 1f       	adc	r25, r25
 7c4:	aa 1f       	adc	r26, r26
 7c6:	bb 1f       	adc	r27, r27
 7c8:	2a 95       	dec	r18
 7ca:	d2 f7       	brpl	.-12     	; 0x7c0 <__pack_f+0x94>
 7cc:	01 97       	sbiw	r24, 0x01	; 1
 7ce:	a1 09       	sbc	r26, r1
 7d0:	b1 09       	sbc	r27, r1
 7d2:	8e 21       	and	r24, r14
 7d4:	9f 21       	and	r25, r15
 7d6:	a0 23       	and	r26, r16
 7d8:	b1 23       	and	r27, r17
 7da:	00 97       	sbiw	r24, 0x00	; 0
 7dc:	a1 05       	cpc	r26, r1
 7de:	b1 05       	cpc	r27, r1
 7e0:	21 f0       	breq	.+8      	; 0x7ea <__pack_f+0xbe>
 7e2:	81 e0       	ldi	r24, 0x01	; 1
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	a0 e0       	ldi	r26, 0x00	; 0
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	9a 01       	movw	r18, r20
 7ec:	ab 01       	movw	r20, r22
 7ee:	28 2b       	or	r18, r24
 7f0:	39 2b       	or	r19, r25
 7f2:	4a 2b       	or	r20, r26
 7f4:	5b 2b       	or	r21, r27
 7f6:	da 01       	movw	r26, r20
 7f8:	c9 01       	movw	r24, r18
 7fa:	8f 77       	andi	r24, 0x7F	; 127
 7fc:	90 70       	andi	r25, 0x00	; 0
 7fe:	a0 70       	andi	r26, 0x00	; 0
 800:	b0 70       	andi	r27, 0x00	; 0
 802:	80 34       	cpi	r24, 0x40	; 64
 804:	91 05       	cpc	r25, r1
 806:	a1 05       	cpc	r26, r1
 808:	b1 05       	cpc	r27, r1
 80a:	39 f4       	brne	.+14     	; 0x81a <__pack_f+0xee>
 80c:	27 ff       	sbrs	r18, 7
 80e:	09 c0       	rjmp	.+18     	; 0x822 <__pack_f+0xf6>
 810:	20 5c       	subi	r18, 0xC0	; 192
 812:	3f 4f       	sbci	r19, 0xFF	; 255
 814:	4f 4f       	sbci	r20, 0xFF	; 255
 816:	5f 4f       	sbci	r21, 0xFF	; 255
 818:	04 c0       	rjmp	.+8      	; 0x822 <__pack_f+0xf6>
 81a:	21 5c       	subi	r18, 0xC1	; 193
 81c:	3f 4f       	sbci	r19, 0xFF	; 255
 81e:	4f 4f       	sbci	r20, 0xFF	; 255
 820:	5f 4f       	sbci	r21, 0xFF	; 255
 822:	e0 e0       	ldi	r30, 0x00	; 0
 824:	f0 e0       	ldi	r31, 0x00	; 0
 826:	20 30       	cpi	r18, 0x00	; 0
 828:	a0 e0       	ldi	r26, 0x00	; 0
 82a:	3a 07       	cpc	r19, r26
 82c:	a0 e0       	ldi	r26, 0x00	; 0
 82e:	4a 07       	cpc	r20, r26
 830:	a0 e4       	ldi	r26, 0x40	; 64
 832:	5a 07       	cpc	r21, r26
 834:	10 f0       	brcs	.+4      	; 0x83a <__pack_f+0x10e>
 836:	e1 e0       	ldi	r30, 0x01	; 1
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	79 01       	movw	r14, r18
 83c:	8a 01       	movw	r16, r20
 83e:	27 c0       	rjmp	.+78     	; 0x88e <__pack_f+0x162>
 840:	60 38       	cpi	r22, 0x80	; 128
 842:	71 05       	cpc	r23, r1
 844:	64 f5       	brge	.+88     	; 0x89e <__pack_f+0x172>
 846:	fb 01       	movw	r30, r22
 848:	e1 58       	subi	r30, 0x81	; 129
 84a:	ff 4f       	sbci	r31, 0xFF	; 255
 84c:	d8 01       	movw	r26, r16
 84e:	c7 01       	movw	r24, r14
 850:	8f 77       	andi	r24, 0x7F	; 127
 852:	90 70       	andi	r25, 0x00	; 0
 854:	a0 70       	andi	r26, 0x00	; 0
 856:	b0 70       	andi	r27, 0x00	; 0
 858:	80 34       	cpi	r24, 0x40	; 64
 85a:	91 05       	cpc	r25, r1
 85c:	a1 05       	cpc	r26, r1
 85e:	b1 05       	cpc	r27, r1
 860:	39 f4       	brne	.+14     	; 0x870 <__pack_f+0x144>
 862:	e7 fe       	sbrs	r14, 7
 864:	0d c0       	rjmp	.+26     	; 0x880 <__pack_f+0x154>
 866:	80 e4       	ldi	r24, 0x40	; 64
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	a0 e0       	ldi	r26, 0x00	; 0
 86c:	b0 e0       	ldi	r27, 0x00	; 0
 86e:	04 c0       	rjmp	.+8      	; 0x878 <__pack_f+0x14c>
 870:	8f e3       	ldi	r24, 0x3F	; 63
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	a0 e0       	ldi	r26, 0x00	; 0
 876:	b0 e0       	ldi	r27, 0x00	; 0
 878:	e8 0e       	add	r14, r24
 87a:	f9 1e       	adc	r15, r25
 87c:	0a 1f       	adc	r16, r26
 87e:	1b 1f       	adc	r17, r27
 880:	17 ff       	sbrs	r17, 7
 882:	05 c0       	rjmp	.+10     	; 0x88e <__pack_f+0x162>
 884:	16 95       	lsr	r17
 886:	07 95       	ror	r16
 888:	f7 94       	ror	r15
 88a:	e7 94       	ror	r14
 88c:	31 96       	adiw	r30, 0x01	; 1
 88e:	87 e0       	ldi	r24, 0x07	; 7
 890:	16 95       	lsr	r17
 892:	07 95       	ror	r16
 894:	f7 94       	ror	r15
 896:	e7 94       	ror	r14
 898:	8a 95       	dec	r24
 89a:	d1 f7       	brne	.-12     	; 0x890 <__pack_f+0x164>
 89c:	05 c0       	rjmp	.+10     	; 0x8a8 <__pack_f+0x17c>
 89e:	ee 24       	eor	r14, r14
 8a0:	ff 24       	eor	r15, r15
 8a2:	87 01       	movw	r16, r14
 8a4:	ef ef       	ldi	r30, 0xFF	; 255
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	6e 2f       	mov	r22, r30
 8aa:	67 95       	ror	r22
 8ac:	66 27       	eor	r22, r22
 8ae:	67 95       	ror	r22
 8b0:	90 2f       	mov	r25, r16
 8b2:	9f 77       	andi	r25, 0x7F	; 127
 8b4:	d7 94       	ror	r13
 8b6:	dd 24       	eor	r13, r13
 8b8:	d7 94       	ror	r13
 8ba:	8e 2f       	mov	r24, r30
 8bc:	86 95       	lsr	r24
 8be:	49 2f       	mov	r20, r25
 8c0:	46 2b       	or	r20, r22
 8c2:	58 2f       	mov	r21, r24
 8c4:	5d 29       	or	r21, r13
 8c6:	b7 01       	movw	r22, r14
 8c8:	ca 01       	movw	r24, r20
 8ca:	1f 91       	pop	r17
 8cc:	0f 91       	pop	r16
 8ce:	ff 90       	pop	r15
 8d0:	ef 90       	pop	r14
 8d2:	df 90       	pop	r13
 8d4:	08 95       	ret

000008d6 <__unpack_f>:
 8d6:	fc 01       	movw	r30, r24
 8d8:	db 01       	movw	r26, r22
 8da:	40 81       	ld	r20, Z
 8dc:	51 81       	ldd	r21, Z+1	; 0x01
 8de:	22 81       	ldd	r18, Z+2	; 0x02
 8e0:	62 2f       	mov	r22, r18
 8e2:	6f 77       	andi	r22, 0x7F	; 127
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	22 1f       	adc	r18, r18
 8e8:	22 27       	eor	r18, r18
 8ea:	22 1f       	adc	r18, r18
 8ec:	93 81       	ldd	r25, Z+3	; 0x03
 8ee:	89 2f       	mov	r24, r25
 8f0:	88 0f       	add	r24, r24
 8f2:	82 2b       	or	r24, r18
 8f4:	28 2f       	mov	r18, r24
 8f6:	30 e0       	ldi	r19, 0x00	; 0
 8f8:	99 1f       	adc	r25, r25
 8fa:	99 27       	eor	r25, r25
 8fc:	99 1f       	adc	r25, r25
 8fe:	11 96       	adiw	r26, 0x01	; 1
 900:	9c 93       	st	X, r25
 902:	11 97       	sbiw	r26, 0x01	; 1
 904:	21 15       	cp	r18, r1
 906:	31 05       	cpc	r19, r1
 908:	a9 f5       	brne	.+106    	; 0x974 <__unpack_f+0x9e>
 90a:	41 15       	cp	r20, r1
 90c:	51 05       	cpc	r21, r1
 90e:	61 05       	cpc	r22, r1
 910:	71 05       	cpc	r23, r1
 912:	11 f4       	brne	.+4      	; 0x918 <__unpack_f+0x42>
 914:	82 e0       	ldi	r24, 0x02	; 2
 916:	37 c0       	rjmp	.+110    	; 0x986 <__unpack_f+0xb0>
 918:	82 e8       	ldi	r24, 0x82	; 130
 91a:	9f ef       	ldi	r25, 0xFF	; 255
 91c:	13 96       	adiw	r26, 0x03	; 3
 91e:	9c 93       	st	X, r25
 920:	8e 93       	st	-X, r24
 922:	12 97       	sbiw	r26, 0x02	; 2
 924:	9a 01       	movw	r18, r20
 926:	ab 01       	movw	r20, r22
 928:	67 e0       	ldi	r22, 0x07	; 7
 92a:	22 0f       	add	r18, r18
 92c:	33 1f       	adc	r19, r19
 92e:	44 1f       	adc	r20, r20
 930:	55 1f       	adc	r21, r21
 932:	6a 95       	dec	r22
 934:	d1 f7       	brne	.-12     	; 0x92a <__unpack_f+0x54>
 936:	83 e0       	ldi	r24, 0x03	; 3
 938:	8c 93       	st	X, r24
 93a:	0d c0       	rjmp	.+26     	; 0x956 <__unpack_f+0x80>
 93c:	22 0f       	add	r18, r18
 93e:	33 1f       	adc	r19, r19
 940:	44 1f       	adc	r20, r20
 942:	55 1f       	adc	r21, r21
 944:	12 96       	adiw	r26, 0x02	; 2
 946:	8d 91       	ld	r24, X+
 948:	9c 91       	ld	r25, X
 94a:	13 97       	sbiw	r26, 0x03	; 3
 94c:	01 97       	sbiw	r24, 0x01	; 1
 94e:	13 96       	adiw	r26, 0x03	; 3
 950:	9c 93       	st	X, r25
 952:	8e 93       	st	-X, r24
 954:	12 97       	sbiw	r26, 0x02	; 2
 956:	20 30       	cpi	r18, 0x00	; 0
 958:	80 e0       	ldi	r24, 0x00	; 0
 95a:	38 07       	cpc	r19, r24
 95c:	80 e0       	ldi	r24, 0x00	; 0
 95e:	48 07       	cpc	r20, r24
 960:	80 e4       	ldi	r24, 0x40	; 64
 962:	58 07       	cpc	r21, r24
 964:	58 f3       	brcs	.-42     	; 0x93c <__unpack_f+0x66>
 966:	14 96       	adiw	r26, 0x04	; 4
 968:	2d 93       	st	X+, r18
 96a:	3d 93       	st	X+, r19
 96c:	4d 93       	st	X+, r20
 96e:	5c 93       	st	X, r21
 970:	17 97       	sbiw	r26, 0x07	; 7
 972:	08 95       	ret
 974:	2f 3f       	cpi	r18, 0xFF	; 255
 976:	31 05       	cpc	r19, r1
 978:	79 f4       	brne	.+30     	; 0x998 <__unpack_f+0xc2>
 97a:	41 15       	cp	r20, r1
 97c:	51 05       	cpc	r21, r1
 97e:	61 05       	cpc	r22, r1
 980:	71 05       	cpc	r23, r1
 982:	19 f4       	brne	.+6      	; 0x98a <__unpack_f+0xb4>
 984:	84 e0       	ldi	r24, 0x04	; 4
 986:	8c 93       	st	X, r24
 988:	08 95       	ret
 98a:	64 ff       	sbrs	r22, 4
 98c:	03 c0       	rjmp	.+6      	; 0x994 <__unpack_f+0xbe>
 98e:	81 e0       	ldi	r24, 0x01	; 1
 990:	8c 93       	st	X, r24
 992:	12 c0       	rjmp	.+36     	; 0x9b8 <__unpack_f+0xe2>
 994:	1c 92       	st	X, r1
 996:	10 c0       	rjmp	.+32     	; 0x9b8 <__unpack_f+0xe2>
 998:	2f 57       	subi	r18, 0x7F	; 127
 99a:	30 40       	sbci	r19, 0x00	; 0
 99c:	13 96       	adiw	r26, 0x03	; 3
 99e:	3c 93       	st	X, r19
 9a0:	2e 93       	st	-X, r18
 9a2:	12 97       	sbiw	r26, 0x02	; 2
 9a4:	83 e0       	ldi	r24, 0x03	; 3
 9a6:	8c 93       	st	X, r24
 9a8:	87 e0       	ldi	r24, 0x07	; 7
 9aa:	44 0f       	add	r20, r20
 9ac:	55 1f       	adc	r21, r21
 9ae:	66 1f       	adc	r22, r22
 9b0:	77 1f       	adc	r23, r23
 9b2:	8a 95       	dec	r24
 9b4:	d1 f7       	brne	.-12     	; 0x9aa <__unpack_f+0xd4>
 9b6:	70 64       	ori	r23, 0x40	; 64
 9b8:	14 96       	adiw	r26, 0x04	; 4
 9ba:	4d 93       	st	X+, r20
 9bc:	5d 93       	st	X+, r21
 9be:	6d 93       	st	X+, r22
 9c0:	7c 93       	st	X, r23
 9c2:	17 97       	sbiw	r26, 0x07	; 7
 9c4:	08 95       	ret

000009c6 <__udivmodqi4>:
 9c6:	99 1b       	sub	r25, r25
 9c8:	79 e0       	ldi	r23, 0x09	; 9
 9ca:	04 c0       	rjmp	.+8      	; 0x9d4 <__udivmodqi4_ep>

000009cc <__udivmodqi4_loop>:
 9cc:	99 1f       	adc	r25, r25
 9ce:	96 17       	cp	r25, r22
 9d0:	08 f0       	brcs	.+2      	; 0x9d4 <__udivmodqi4_ep>
 9d2:	96 1b       	sub	r25, r22

000009d4 <__udivmodqi4_ep>:
 9d4:	88 1f       	adc	r24, r24
 9d6:	7a 95       	dec	r23
 9d8:	c9 f7       	brne	.-14     	; 0x9cc <__udivmodqi4_loop>
 9da:	80 95       	com	r24
 9dc:	08 95       	ret

000009de <__divmodhi4>:
 9de:	97 fb       	bst	r25, 7
 9e0:	09 2e       	mov	r0, r25
 9e2:	07 26       	eor	r0, r23
 9e4:	0a d0       	rcall	.+20     	; 0x9fa <__divmodhi4_neg1>
 9e6:	77 fd       	sbrc	r23, 7
 9e8:	04 d0       	rcall	.+8      	; 0x9f2 <__divmodhi4_neg2>
 9ea:	0c d0       	rcall	.+24     	; 0xa04 <__udivmodhi4>
 9ec:	06 d0       	rcall	.+12     	; 0x9fa <__divmodhi4_neg1>
 9ee:	00 20       	and	r0, r0
 9f0:	1a f4       	brpl	.+6      	; 0x9f8 <__divmodhi4_exit>

000009f2 <__divmodhi4_neg2>:
 9f2:	70 95       	com	r23
 9f4:	61 95       	neg	r22
 9f6:	7f 4f       	sbci	r23, 0xFF	; 255

000009f8 <__divmodhi4_exit>:
 9f8:	08 95       	ret

000009fa <__divmodhi4_neg1>:
 9fa:	f6 f7       	brtc	.-4      	; 0x9f8 <__divmodhi4_exit>
 9fc:	90 95       	com	r25
 9fe:	81 95       	neg	r24
 a00:	9f 4f       	sbci	r25, 0xFF	; 255
 a02:	08 95       	ret

00000a04 <__udivmodhi4>:
 a04:	aa 1b       	sub	r26, r26
 a06:	bb 1b       	sub	r27, r27
 a08:	51 e1       	ldi	r21, 0x11	; 17
 a0a:	07 c0       	rjmp	.+14     	; 0xa1a <__udivmodhi4_ep>

00000a0c <__udivmodhi4_loop>:
 a0c:	aa 1f       	adc	r26, r26
 a0e:	bb 1f       	adc	r27, r27
 a10:	a6 17       	cp	r26, r22
 a12:	b7 07       	cpc	r27, r23
 a14:	10 f0       	brcs	.+4      	; 0xa1a <__udivmodhi4_ep>
 a16:	a6 1b       	sub	r26, r22
 a18:	b7 0b       	sbc	r27, r23

00000a1a <__udivmodhi4_ep>:
 a1a:	88 1f       	adc	r24, r24
 a1c:	99 1f       	adc	r25, r25
 a1e:	5a 95       	dec	r21
 a20:	a9 f7       	brne	.-22     	; 0xa0c <__udivmodhi4_loop>
 a22:	80 95       	com	r24
 a24:	90 95       	com	r25
 a26:	bc 01       	movw	r22, r24
 a28:	cd 01       	movw	r24, r26
 a2a:	08 95       	ret

00000a2c <__prologue_saves__>:
 a2c:	2f 92       	push	r2
 a2e:	3f 92       	push	r3
 a30:	4f 92       	push	r4
 a32:	5f 92       	push	r5
 a34:	6f 92       	push	r6
 a36:	7f 92       	push	r7
 a38:	8f 92       	push	r8
 a3a:	9f 92       	push	r9
 a3c:	af 92       	push	r10
 a3e:	bf 92       	push	r11
 a40:	cf 92       	push	r12
 a42:	df 92       	push	r13
 a44:	ef 92       	push	r14
 a46:	ff 92       	push	r15
 a48:	0f 93       	push	r16
 a4a:	1f 93       	push	r17
 a4c:	cf 93       	push	r28
 a4e:	df 93       	push	r29
 a50:	cd b7       	in	r28, 0x3d	; 61
 a52:	de b7       	in	r29, 0x3e	; 62
 a54:	ca 1b       	sub	r28, r26
 a56:	db 0b       	sbc	r29, r27
 a58:	0f b6       	in	r0, 0x3f	; 63
 a5a:	f8 94       	cli
 a5c:	de bf       	out	0x3e, r29	; 62
 a5e:	0f be       	out	0x3f, r0	; 63
 a60:	cd bf       	out	0x3d, r28	; 61
 a62:	09 94       	ijmp

00000a64 <__epilogue_restores__>:
 a64:	2a 88       	ldd	r2, Y+18	; 0x12
 a66:	39 88       	ldd	r3, Y+17	; 0x11
 a68:	48 88       	ldd	r4, Y+16	; 0x10
 a6a:	5f 84       	ldd	r5, Y+15	; 0x0f
 a6c:	6e 84       	ldd	r6, Y+14	; 0x0e
 a6e:	7d 84       	ldd	r7, Y+13	; 0x0d
 a70:	8c 84       	ldd	r8, Y+12	; 0x0c
 a72:	9b 84       	ldd	r9, Y+11	; 0x0b
 a74:	aa 84       	ldd	r10, Y+10	; 0x0a
 a76:	b9 84       	ldd	r11, Y+9	; 0x09
 a78:	c8 84       	ldd	r12, Y+8	; 0x08
 a7a:	df 80       	ldd	r13, Y+7	; 0x07
 a7c:	ee 80       	ldd	r14, Y+6	; 0x06
 a7e:	fd 80       	ldd	r15, Y+5	; 0x05
 a80:	0c 81       	ldd	r16, Y+4	; 0x04
 a82:	1b 81       	ldd	r17, Y+3	; 0x03
 a84:	aa 81       	ldd	r26, Y+2	; 0x02
 a86:	b9 81       	ldd	r27, Y+1	; 0x01
 a88:	ce 0f       	add	r28, r30
 a8a:	d1 1d       	adc	r29, r1
 a8c:	0f b6       	in	r0, 0x3f	; 63
 a8e:	f8 94       	cli
 a90:	de bf       	out	0x3e, r29	; 62
 a92:	0f be       	out	0x3f, r0	; 63
 a94:	cd bf       	out	0x3d, r28	; 61
 a96:	ed 01       	movw	r28, r26
 a98:	08 95       	ret

00000a9a <_exit>:
 a9a:	f8 94       	cli

00000a9c <__stop_program>:
 a9c:	ff cf       	rjmp	.-2      	; 0xa9c <__stop_program>
