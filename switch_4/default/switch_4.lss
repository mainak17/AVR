
switch_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000160  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000003b4  00000000  00000000  000001ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000010d  00000000  00000000  000005a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000002eb  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  0000099c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d1  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000006d0  00000000  00000000  00000a8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000000a8  00000000  00000000  0000115d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	93 c0       	rjmp	.+294    	; 0x15c <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#define F_CPU 16000000ul
#include<avr/io.h>
#include<util/delay.h>
void main()
{
  38:	0f 93       	push	r16
  3a:	1f 93       	push	r17
DDRB=0b00001111;
  3c:	8f e0       	ldi	r24, 0x0F	; 15
  3e:	87 bb       	out	0x17, r24	; 23
  40:	40 e0       	ldi	r20, 0x00	; 0
  42:	50 e0       	ldi	r21, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  44:	60 e9       	ldi	r22, 0x90	; 144
  46:	71 e0       	ldi	r23, 0x01	; 1
if(c==4)
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x08;
  48:	08 e0       	ldi	r16, 0x08	; 8
if(c==3)
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x04;
  4a:	14 e0       	ldi	r17, 0x04	; 4
if(c==2)
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x02;
  4c:	b2 e0       	ldi	r27, 0x02	; 2
if(c==1)
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x01;
  4e:	a1 e0       	ldi	r26, 0x01	; 1
{
DDRB=0b00001111;
int c=0;
while(1)
{
if((PINB&0b00010000)==0x00)
  50:	b4 99       	sbic	0x16, 4	; 22
  52:	0e c0       	rjmp	.+28     	; 0x70 <__SREG__+0x31>
  54:	80 ed       	ldi	r24, 0xD0	; 208
  56:	97 e0       	ldi	r25, 0x07	; 7
  58:	fb 01       	movw	r30, r22
  5a:	31 97       	sbiw	r30, 0x01	; 1
  5c:	f1 f7       	brne	.-4      	; 0x5a <__SREG__+0x1b>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  5e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  60:	d9 f7       	brne	.-10     	; 0x58 <__SREG__+0x19>
{
	_delay_ms(200);
	c++;
  62:	4f 5f       	subi	r20, 0xFF	; 255
  64:	5f 4f       	sbci	r21, 0xFF	; 255
	if(c>4)
  66:	45 30       	cpi	r20, 0x05	; 5
  68:	51 05       	cpc	r21, r1
  6a:	14 f0       	brlt	.+4      	; 0x70 <__SREG__+0x31>
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	50 e0       	ldi	r21, 0x00	; 0
	{
	c=0;
	}
	
}
if(((PINB&0b00100000)==0x00))
  70:	b5 99       	sbic	0x16, 5	; 22
  72:	ee cf       	rjmp	.-36     	; 0x50 <__SREG__+0x11>
{
if(c==1)
  74:	41 30       	cpi	r20, 0x01	; 1
  76:	51 05       	cpc	r21, r1
  78:	c9 f4       	brne	.+50     	; 0xac <__SREG__+0x6d>
  7a:	20 e0       	ldi	r18, 0x00	; 0
  7c:	30 e0       	ldi	r19, 0x00	; 0
  7e:	13 c0       	rjmp	.+38     	; 0xa6 <__SREG__+0x67>
  80:	fb 01       	movw	r30, r22
  82:	31 97       	sbiw	r30, 0x01	; 1
  84:	f1 f7       	brne	.-4      	; 0x82 <__SREG__+0x43>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  86:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  88:	d9 f7       	brne	.-10     	; 0x80 <__SREG__+0x41>
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x01;
  8a:	a8 bb       	out	0x18, r26	; 24
  8c:	84 ec       	ldi	r24, 0xC4	; 196
  8e:	99 e0       	ldi	r25, 0x09	; 9
  90:	fb 01       	movw	r30, r22
  92:	31 97       	sbiw	r30, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <__SREG__+0x53>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  96:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  98:	d9 f7       	brne	.-10     	; 0x90 <__SREG__+0x51>
_delay_ms(250);
PORTB=0x00;
  9a:	18 ba       	out	0x18, r1	; 24
}
if(((PINB&0b00100000)==0x00))
{
if(c==1)
{
for(int i=0;i<10;i++)
  9c:	2f 5f       	subi	r18, 0xFF	; 255
  9e:	3f 4f       	sbci	r19, 0xFF	; 255
  a0:	2a 30       	cpi	r18, 0x0A	; 10
  a2:	31 05       	cpc	r19, r1
  a4:	a9 f2       	breq	.-86     	; 0x50 <__SREG__+0x11>
  a6:	84 ec       	ldi	r24, 0xC4	; 196
  a8:	99 e0       	ldi	r25, 0x09	; 9
  aa:	ea cf       	rjmp	.-44     	; 0x80 <__SREG__+0x41>
_delay_ms(250);
PORTB=0x00;
}
}

if(c==2)
  ac:	42 30       	cpi	r20, 0x02	; 2
  ae:	51 05       	cpc	r21, r1
  b0:	d1 f4       	brne	.+52     	; 0xe6 <__SREG__+0xa7>
  b2:	20 e0       	ldi	r18, 0x00	; 0
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	14 c0       	rjmp	.+40     	; 0xe0 <__SREG__+0xa1>
  b8:	fb 01       	movw	r30, r22
  ba:	31 97       	sbiw	r30, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <__SREG__+0x7b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  be:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__SREG__+0x79>
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x02;
  c2:	b8 bb       	out	0x18, r27	; 24
  c4:	84 ec       	ldi	r24, 0xC4	; 196
  c6:	99 e0       	ldi	r25, 0x09	; 9
  c8:	fb 01       	movw	r30, r22
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <__SREG__+0x8b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ce:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d0:	d9 f7       	brne	.-10     	; 0xc8 <__SREG__+0x89>
_delay_ms(250);
PORTB=0x00;
  d2:	18 ba       	out	0x18, r1	; 24
}
}

if(c==2)
{
for(int i=0;i<10;i++)
  d4:	2f 5f       	subi	r18, 0xFF	; 255
  d6:	3f 4f       	sbci	r19, 0xFF	; 255
  d8:	2a 30       	cpi	r18, 0x0A	; 10
  da:	31 05       	cpc	r19, r1
  dc:	09 f4       	brne	.+2      	; 0xe0 <__SREG__+0xa1>
  de:	b8 cf       	rjmp	.-144    	; 0x50 <__SREG__+0x11>
  e0:	84 ec       	ldi	r24, 0xC4	; 196
  e2:	99 e0       	ldi	r25, 0x09	; 9
  e4:	e9 cf       	rjmp	.-46     	; 0xb8 <__SREG__+0x79>
_delay_ms(250);
PORTB=0x00;
}
}

if(c==3)
  e6:	43 30       	cpi	r20, 0x03	; 3
  e8:	51 05       	cpc	r21, r1
  ea:	d1 f4       	brne	.+52     	; 0x120 <__SREG__+0xe1>
  ec:	20 e0       	ldi	r18, 0x00	; 0
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	14 c0       	rjmp	.+40     	; 0x11a <__SREG__+0xdb>
  f2:	fb 01       	movw	r30, r22
  f4:	31 97       	sbiw	r30, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <__SREG__+0xb5>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  fa:	d9 f7       	brne	.-10     	; 0xf2 <__SREG__+0xb3>
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x04;
  fc:	18 bb       	out	0x18, r17	; 24
  fe:	84 ec       	ldi	r24, 0xC4	; 196
 100:	99 e0       	ldi	r25, 0x09	; 9
 102:	fb 01       	movw	r30, r22
 104:	31 97       	sbiw	r30, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <__SREG__+0xc5>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 108:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 10a:	d9 f7       	brne	.-10     	; 0x102 <__SREG__+0xc3>
_delay_ms(250);
PORTB=0x00;
 10c:	18 ba       	out	0x18, r1	; 24
}
}

if(c==3)
{
for(int i=0;i<10;i++)
 10e:	2f 5f       	subi	r18, 0xFF	; 255
 110:	3f 4f       	sbci	r19, 0xFF	; 255
 112:	2a 30       	cpi	r18, 0x0A	; 10
 114:	31 05       	cpc	r19, r1
 116:	09 f4       	brne	.+2      	; 0x11a <__SREG__+0xdb>
 118:	9b cf       	rjmp	.-202    	; 0x50 <__SREG__+0x11>
 11a:	84 ec       	ldi	r24, 0xC4	; 196
 11c:	99 e0       	ldi	r25, 0x09	; 9
 11e:	e9 cf       	rjmp	.-46     	; 0xf2 <__SREG__+0xb3>
PORTB=0x04;
_delay_ms(250);
PORTB=0x00;
}
}
if(c==4)
 120:	44 30       	cpi	r20, 0x04	; 4
 122:	51 05       	cpc	r21, r1
 124:	09 f0       	breq	.+2      	; 0x128 <__SREG__+0xe9>
 126:	94 cf       	rjmp	.-216    	; 0x50 <__SREG__+0x11>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	14 c0       	rjmp	.+40     	; 0x156 <__SREG__+0x117>
 12e:	fb 01       	movw	r30, r22
 130:	31 97       	sbiw	r30, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <__SREG__+0xf1>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 134:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 136:	d9 f7       	brne	.-10     	; 0x12e <__SREG__+0xef>
{
for(int i=0;i<10;i++)
{
_delay_ms(250);
PORTB=0x08;
 138:	08 bb       	out	0x18, r16	; 24
 13a:	84 ec       	ldi	r24, 0xC4	; 196
 13c:	99 e0       	ldi	r25, 0x09	; 9
 13e:	fb 01       	movw	r30, r22
 140:	31 97       	sbiw	r30, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <__SREG__+0x101>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 144:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 146:	d9 f7       	brne	.-10     	; 0x13e <__SREG__+0xff>
_delay_ms(250);
PORTB=0x00;
 148:	18 ba       	out	0x18, r1	; 24
PORTB=0x00;
}
}
if(c==4)
{
for(int i=0;i<10;i++)
 14a:	2f 5f       	subi	r18, 0xFF	; 255
 14c:	3f 4f       	sbci	r19, 0xFF	; 255
 14e:	2a 30       	cpi	r18, 0x0A	; 10
 150:	31 05       	cpc	r19, r1
 152:	09 f4       	brne	.+2      	; 0x156 <__SREG__+0x117>
 154:	7d cf       	rjmp	.-262    	; 0x50 <__SREG__+0x11>
 156:	84 ec       	ldi	r24, 0xC4	; 196
 158:	99 e0       	ldi	r25, 0x09	; 9
 15a:	e9 cf       	rjmp	.-46     	; 0x12e <__SREG__+0xef>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>
