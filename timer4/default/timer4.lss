
timer4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000322  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000376  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000034  00000000  00000000  00000396  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000570  00000000  00000000  000003ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000160  00000000  00000000  0000093a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000004cb  00000000  00000000  00000a9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000040  00000000  00000000  00000f68  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000d4  00000000  00000000  00000fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000003f8  00000000  00000000  0000107c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00001474  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	98 d0       	rcall	.+304    	; 0x164 <main>
  34:	74 c1       	rjmp	.+744    	; 0x31e <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <display>:
		
	
}//main

void display(int i,int j)
{	
  38:	9c 01       	movw	r18, r24
	
	 if(j==1)
  3a:	61 30       	cpi	r22, 0x01	; 1
  3c:	71 05       	cpc	r23, r1
  3e:	19 f4       	brne	.+6      	; 0x46 <__SREG__+0x7>
	 {
	 	PORTC=0x01;
  40:	81 e0       	ldi	r24, 0x01	; 1
  42:	85 bb       	out	0x15, r24	; 21
  44:	10 c0       	rjmp	.+32     	; 0x66 <__SREG__+0x27>
	 }
	 if(j==2)
  46:	62 30       	cpi	r22, 0x02	; 2
  48:	71 05       	cpc	r23, r1
  4a:	19 f4       	brne	.+6      	; 0x52 <__SREG__+0x13>
	 {
	 	PORTC=0x02;
  4c:	82 e0       	ldi	r24, 0x02	; 2
  4e:	85 bb       	out	0x15, r24	; 21
  50:	0f c0       	rjmp	.+30     	; 0x70 <__SREG__+0x31>
	 }
	 if(j==3)
  52:	63 30       	cpi	r22, 0x03	; 3
  54:	71 05       	cpc	r23, r1
  56:	11 f4       	brne	.+4      	; 0x5c <__SREG__+0x1d>
	 {
	 	PORTC=0x04;
  58:	84 e0       	ldi	r24, 0x04	; 4
  5a:	0e c0       	rjmp	.+28     	; 0x78 <__SREG__+0x39>
	 }
	 if(j==4)
  5c:	64 30       	cpi	r22, 0x04	; 4
  5e:	71 05       	cpc	r23, r1
  60:	11 f4       	brne	.+4      	; 0x66 <__SREG__+0x27>
	 {
	 	PORTC=0x08;
  62:	88 e0       	ldi	r24, 0x08	; 8
  64:	09 c0       	rjmp	.+18     	; 0x78 <__SREG__+0x39>
	 }
	 if(j==5)
  66:	65 30       	cpi	r22, 0x05	; 5
  68:	71 05       	cpc	r23, r1
  6a:	11 f4       	brne	.+4      	; 0x70 <__SREG__+0x31>
	 {
	 	PORTC=0x10;
  6c:	80 e1       	ldi	r24, 0x10	; 16
  6e:	04 c0       	rjmp	.+8      	; 0x78 <__SREG__+0x39>
	 }
	 if(j==6)
  70:	66 30       	cpi	r22, 0x06	; 6
  72:	71 05       	cpc	r23, r1
  74:	11 f4       	brne	.+4      	; 0x7a <__SREG__+0x3b>
	 {
	 	PORTC=0x20;
  76:	80 e2       	ldi	r24, 0x20	; 32
  78:	85 bb       	out	0x15, r24	; 21
	 }

	 
	if(i==1)     
  7a:	21 30       	cpi	r18, 0x01	; 1
  7c:	31 05       	cpc	r19, r1
  7e:	19 f4       	brne	.+6      	; 0x86 <__SREG__+0x47>
	PORTD=~(0x06);				
  80:	89 ef       	ldi	r24, 0xF9	; 249
  82:	82 bb       	out	0x12, r24	; 18
  84:	12 c0       	rjmp	.+36     	; 0xaa <__SREG__+0x6b>
	if(i==2)
  86:	22 30       	cpi	r18, 0x02	; 2
  88:	31 05       	cpc	r19, r1
  8a:	19 f4       	brne	.+6      	; 0x92 <__SREG__+0x53>
	PORTD=~(0x5b);
  8c:	84 ea       	ldi	r24, 0xA4	; 164
  8e:	82 bb       	out	0x12, r24	; 18
  90:	12 c0       	rjmp	.+36     	; 0xb6 <__SREG__+0x77>
	if(i==3)
  92:	23 30       	cpi	r18, 0x03	; 3
  94:	31 05       	cpc	r19, r1
  96:	19 f4       	brne	.+6      	; 0x9e <__SREG__+0x5f>
	PORTD=~(0x4f);
  98:	80 eb       	ldi	r24, 0xB0	; 176
  9a:	82 bb       	out	0x12, r24	; 18
  9c:	11 c0       	rjmp	.+34     	; 0xc0 <__SREG__+0x81>
	if(i==4)
  9e:	24 30       	cpi	r18, 0x04	; 4
  a0:	31 05       	cpc	r19, r1
  a2:	19 f4       	brne	.+6      	; 0xaa <__SREG__+0x6b>
	PORTD=~(0x66);
  a4:	89 e9       	ldi	r24, 0x99	; 153
  a6:	82 bb       	out	0x12, r24	; 18
  a8:	10 c0       	rjmp	.+32     	; 0xca <__SREG__+0x8b>
	if(i==5)
  aa:	25 30       	cpi	r18, 0x05	; 5
  ac:	31 05       	cpc	r19, r1
  ae:	19 f4       	brne	.+6      	; 0xb6 <__SREG__+0x77>
	PORTD=~(0x6d);
  b0:	82 e9       	ldi	r24, 0x92	; 146
  b2:	82 bb       	out	0x12, r24	; 18
  b4:	0f c0       	rjmp	.+30     	; 0xd4 <__SREG__+0x95>
	if(i==6)
  b6:	26 30       	cpi	r18, 0x06	; 6
  b8:	31 05       	cpc	r19, r1
  ba:	11 f4       	brne	.+4      	; 0xc0 <__SREG__+0x81>
	PORTD=~(0x7d);
  bc:	82 e8       	ldi	r24, 0x82	; 130
  be:	0e c0       	rjmp	.+28     	; 0xdc <__SREG__+0x9d>
	if(i==7)
  c0:	27 30       	cpi	r18, 0x07	; 7
  c2:	31 05       	cpc	r19, r1
  c4:	11 f4       	brne	.+4      	; 0xca <__SREG__+0x8b>
	PORTD=~(0x07);
  c6:	88 ef       	ldi	r24, 0xF8	; 248
  c8:	09 c0       	rjmp	.+18     	; 0xdc <__SREG__+0x9d>
	if(i==8)
  ca:	28 30       	cpi	r18, 0x08	; 8
  cc:	31 05       	cpc	r19, r1
  ce:	11 f4       	brne	.+4      	; 0xd4 <__SREG__+0x95>
	PORTD=~(0x7f);
  d0:	80 e8       	ldi	r24, 0x80	; 128
  d2:	04 c0       	rjmp	.+8      	; 0xdc <__SREG__+0x9d>
	if(i==9)
  d4:	29 30       	cpi	r18, 0x09	; 9
  d6:	31 05       	cpc	r19, r1
  d8:	19 f4       	brne	.+6      	; 0xe0 <__SREG__+0xa1>
	PORTD=~(0x6f);
  da:	80 e9       	ldi	r24, 0x90	; 144
  dc:	82 bb       	out	0x12, r24	; 18
  de:	08 95       	ret
	if(i==0)
  e0:	23 2b       	or	r18, r19
  e2:	11 f4       	brne	.+4      	; 0xe8 <__SREG__+0xa9>
	PORTD=~(0x3f); 
  e4:	80 ec       	ldi	r24, 0xC0	; 192
  e6:	82 bb       	out	0x12, r24	; 18
  e8:	08 95       	ret

000000ea <display1>:
}

void display1(int z,int j)
{
  ea:	9c 01       	movw	r18, r24
	 if(j==6)
  ec:	66 30       	cpi	r22, 0x06	; 6
  ee:	71 05       	cpc	r23, r1
  f0:	19 f4       	brne	.+6      	; 0xf8 <display1+0xe>
	 {
	 	PORTC=0x05;
  f2:	85 e0       	ldi	r24, 0x05	; 5
  f4:	85 bb       	out	0x15, r24	; 21
  f6:	10 c0       	rjmp	.+32     	; 0x118 <display1+0x2e>
	 }
	 if(j==5)
  f8:	65 30       	cpi	r22, 0x05	; 5
  fa:	71 05       	cpc	r23, r1
  fc:	19 f4       	brne	.+6      	; 0x104 <display1+0x1a>
	 {
	 	PORTC=0x02;
  fe:	82 e0       	ldi	r24, 0x02	; 2
 100:	85 bb       	out	0x15, r24	; 21
 102:	0f c0       	rjmp	.+30     	; 0x122 <display1+0x38>
	 }
	 if(j==4)
 104:	64 30       	cpi	r22, 0x04	; 4
 106:	71 05       	cpc	r23, r1
 108:	11 f4       	brne	.+4      	; 0x10e <display1+0x24>
	 {
	 	PORTC=0x04;
 10a:	84 e0       	ldi	r24, 0x04	; 4
 10c:	0e c0       	rjmp	.+28     	; 0x12a <display1+0x40>
	 }
	 if(j==3)
 10e:	63 30       	cpi	r22, 0x03	; 3
 110:	71 05       	cpc	r23, r1
 112:	11 f4       	brne	.+4      	; 0x118 <display1+0x2e>
	 {
	 	PORTC=0x08;
 114:	88 e0       	ldi	r24, 0x08	; 8
 116:	09 c0       	rjmp	.+18     	; 0x12a <display1+0x40>
	 }
	 if(j==2)
 118:	62 30       	cpi	r22, 0x02	; 2
 11a:	71 05       	cpc	r23, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <display1+0x38>
	 {
	 	PORTC=0x10;
 11e:	80 e1       	ldi	r24, 0x10	; 16
 120:	04 c0       	rjmp	.+8      	; 0x12a <display1+0x40>
	 }
	 if(j==1)
 122:	61 30       	cpi	r22, 0x01	; 1
 124:	71 05       	cpc	r23, r1
 126:	11 f4       	brne	.+4      	; 0x12c <display1+0x42>
	 {
	 	PORTC=0x20;
 128:	80 e2       	ldi	r24, 0x20	; 32
 12a:	85 bb       	out	0x15, r24	; 21
	 }


	if(z==1)     
 12c:	21 30       	cpi	r18, 0x01	; 1
 12e:	31 05       	cpc	r19, r1
 130:	19 f4       	brne	.+6      	; 0x138 <display1+0x4e>
	PORTD=~(0x3f);				
 132:	80 ec       	ldi	r24, 0xC0	; 192
 134:	82 bb       	out	0x12, r24	; 18
 136:	10 c0       	rjmp	.+32     	; 0x158 <display1+0x6e>
	if(z==2)
 138:	22 30       	cpi	r18, 0x02	; 2
 13a:	31 05       	cpc	r19, r1
 13c:	11 f4       	brne	.+4      	; 0x142 <display1+0x58>
	PORTD=~(0x79);
 13e:	86 e8       	ldi	r24, 0x86	; 134
 140:	09 c0       	rjmp	.+18     	; 0x154 <display1+0x6a>
	if(z==3)
 142:	23 30       	cpi	r18, 0x03	; 3
 144:	31 05       	cpc	r19, r1
 146:	11 f4       	brne	.+4      	; 0x14c <display1+0x62>
	PORTD=~(0x71);
 148:	8e e8       	ldi	r24, 0x8E	; 142
 14a:	04 c0       	rjmp	.+8      	; 0x154 <display1+0x6a>
	if(z==4)
 14c:	24 30       	cpi	r18, 0x04	; 4
 14e:	31 05       	cpc	r19, r1
 150:	19 f4       	brne	.+6      	; 0x158 <display1+0x6e>
	PORTD=~(0x3e);
 152:	81 ec       	ldi	r24, 0xC1	; 193
 154:	82 bb       	out	0x12, r24	; 18
 156:	08 95       	ret
	if(z==5)
 158:	25 30       	cpi	r18, 0x05	; 5
 15a:	31 05       	cpc	r19, r1
 15c:	11 f4       	brne	.+4      	; 0x162 <display1+0x78>
	PORTD=~(0x6D);
 15e:	82 e9       	ldi	r24, 0x92	; 146
 160:	82 bb       	out	0x12, r24	; 18
 162:	08 95       	ret

00000164 <main>:
#include <avr/io.h>
#include <util/delay.h>


 void main()
{   
 164:	5f 92       	push	r5
 166:	6f 92       	push	r6
 168:	7f 92       	push	r7
 16a:	8f 92       	push	r8
 16c:	9f 92       	push	r9
 16e:	af 92       	push	r10
 170:	bf 92       	push	r11
 172:	cf 92       	push	r12
 174:	df 92       	push	r13
 176:	ef 92       	push	r14
 178:	ff 92       	push	r15
 17a:	0f 93       	push	r16
 17c:	1f 93       	push	r17
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
int hrs=0;
int sec=0;
int secs;
int k=0;

	DDRD=0xFF;
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	81 bb       	out	0x11, r24	; 17
	DDRC=0xFF;
 186:	84 bb       	out	0x14, r24	; 20
	DDRB=0x0F;
 188:	8f e0       	ldi	r24, 0x0F	; 15
 18a:	87 bb       	out	0x17, r24	; 23
 18c:	01 e0       	ldi	r16, 0x01	; 1
 18e:	10 e0       	ldi	r17, 0x00	; 0
 190:	aa 24       	eor	r10, r10
 192:	bb 24       	eor	r11, r11
 194:	c0 e0       	ldi	r28, 0x00	; 0
 196:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 198:	40 ea       	ldi	r20, 0xA0	; 160
 19a:	c4 2e       	mov	r12, r20
 19c:	4f e0       	ldi	r20, 0x0F	; 15
 19e:	d4 2e       	mov	r13, r20
			if((min==0)&&(sec==0))
			{
			break;
			}
          }//for
PORTB=0x02;
 1a0:	30 e9       	ldi	r19, 0x90	; 144
 1a2:	63 2e       	mov	r6, r19
 1a4:	31 e0       	ldi	r19, 0x01	; 1
 1a6:	73 2e       	mov	r7, r19
 1a8:	22 e0       	ldi	r18, 0x02	; 2
 1aa:	52 2e       	mov	r5, r18
 1ac:	06 c0       	rjmp	.+12     	; 0x1ba <main+0x56>
int secs;
int k=0;

	DDRD=0xFF;
	DDRC=0xFF;
	DDRB=0x0F;
 1ae:	01 e0       	ldi	r16, 0x01	; 1
 1b0:	10 e0       	ldi	r17, 0x00	; 0
 1b2:	88 24       	eor	r8, r8
 1b4:	99 24       	eor	r9, r9
 1b6:	c0 e0       	ldi	r28, 0x00	; 0
 1b8:	d0 e0       	ldi	r29, 0x00	; 0
	while(1)
	{	
		if((PINB&0x20)==0x00)
 1ba:	b5 99       	sbic	0x16, 5	; 22
 1bc:	04 c0       	rjmp	.+8      	; 0x1c6 <main+0x62>
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	a9 2e       	mov	r10, r25
 1c2:	b1 2c       	mov	r11, r1
 1c4:	04 c0       	rjmp	.+8      	; 0x1ce <main+0x6a>
			{
			c=1;
				
			}
		if(c==1)
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	a8 16       	cp	r10, r24
 1ca:	b1 04       	cpc	r11, r1
 1cc:	c9 f4       	brne	.+50     	; 0x200 <main+0x9c>
		{
		            display(k,5);
 1ce:	ce 01       	movw	r24, r28
 1d0:	65 e0       	ldi	r22, 0x05	; 5
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	31 df       	rcall	.-414    	; 0x38 <display>
 1d6:	c6 01       	movw	r24, r12
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <main+0x74>
					_delay_ms(1);
					display(0,6);
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	66 e0       	ldi	r22, 0x06	; 6
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	29 df       	rcall	.-430    	; 0x38 <display>
 1e6:	c6 01       	movw	r24, r12
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <main+0x84>
					_delay_ms(1);

			if((PINB&0x20)==0x00)
 1ec:	b5 99       	sbic	0x16, 5	; 22
 1ee:	08 c0       	rjmp	.+16     	; 0x200 <main+0x9c>
 1f0:	88 eb       	ldi	r24, 0xB8	; 184
 1f2:	9b e0       	ldi	r25, 0x0B	; 11
 1f4:	f3 01       	movw	r30, r6
 1f6:	31 97       	sbiw	r30, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <main+0x92>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1fa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1fc:	d9 f7       	brne	.-10     	; 0x1f4 <main+0x90>
			{
			_delay_ms(300);
			 k++;	
 1fe:	21 96       	adiw	r28, 0x01	; 1
			}
          
		}

		if((PINB&0x10)==0x00)
 200:	b4 99       	sbic	0x16, 4	; 22
 202:	0e c0       	rjmp	.+28     	; 0x220 <main+0xbc>
 204:	88 eb       	ldi	r24, 0xB8	; 184
 206:	9b e0       	ldi	r25, 0x0B	; 11
 208:	f3 01       	movw	r30, r6
 20a:	31 97       	sbiw	r30, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <main+0xa6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 20e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 210:	d9 f7       	brne	.-10     	; 0x208 <main+0xa4>
			{
			_delay_ms(300);	 
			i++;
 212:	0f 5f       	subi	r16, 0xFF	; 255
 214:	1f 4f       	sbci	r17, 0xFF	; 255
 216:	aa 24       	eor	r10, r10
 218:	bb 24       	eor	r11, r11
 21a:	89 e0       	ldi	r24, 0x09	; 9
 21c:	88 2e       	mov	r8, r24
 21e:	91 2c       	mov	r9, r1
			secs=9;
			c=0;
			}			

if(i%2==0)
 220:	00 fd       	sbrc	r16, 0
 222:	cb cf       	rjmp	.-106    	; 0x1ba <main+0x56>
	{	for(min=k-1;min>=0;min--)
 224:	7e 01       	movw	r14, r28
 226:	28 c0       	rjmp	.+80     	; 0x278 <main+0x114>
 228:	00 e0       	ldi	r16, 0x00	; 0
 22a:	10 e0       	ldi	r17, 0x00	; 0
			for(sec=secs;sec>=0;sec--)
	 			{
			
			for(int y=0;y<250;y++)
				 {
					display(min,3);
 22c:	c7 01       	movw	r24, r14
 22e:	63 e0       	ldi	r22, 0x03	; 3
 230:	70 e0       	ldi	r23, 0x00	; 0
 232:	02 df       	rcall	.-508    	; 0x38 <display>
 234:	c6 01       	movw	r24, r12
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <main+0xd2>
					_delay_ms(1);
					display(0,4);
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	64 e0       	ldi	r22, 0x04	; 4
 240:	70 e0       	ldi	r23, 0x00	; 0
 242:	fa de       	rcall	.-524    	; 0x38 <display>
 244:	c6 01       	movw	r24, r12
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <main+0xe2>
					_delay_ms(1);
					
					display(sec,1);
 24a:	ce 01       	movw	r24, r28
 24c:	61 e0       	ldi	r22, 0x01	; 1
 24e:	70 e0       	ldi	r23, 0x00	; 0
 250:	f3 de       	rcall	.-538    	; 0x38 <display>
 252:	c6 01       	movw	r24, r12
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <main+0xf0>
					_delay_ms(1);
					display(0,2);
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	62 e0       	ldi	r22, 0x02	; 2
 25e:	70 e0       	ldi	r23, 0x00	; 0
 260:	eb de       	rcall	.-554    	; 0x38 <display>
 262:	c6 01       	movw	r24, r12
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <main+0x100>
			{
				
			for(sec=secs;sec>=0;sec--)
	 			{
			
			for(int y=0;y<250;y++)
 268:	0f 5f       	subi	r16, 0xFF	; 255
 26a:	1f 4f       	sbci	r17, 0xFF	; 255
 26c:	0a 3f       	cpi	r16, 0xFA	; 250
 26e:	11 05       	cpc	r17, r1
 270:	e9 f6       	brne	.-70     	; 0x22c <main+0xc8>

if(i%2==0)
	{	for(min=k-1;min>=0;min--)
			{
				
			for(sec=secs;sec>=0;sec--)
 272:	21 97       	sbiw	r28, 0x01	; 1
 274:	d7 ff       	sbrs	r29, 7
 276:	d8 cf       	rjmp	.-80     	; 0x228 <main+0xc4>
			secs=9;
			c=0;
			}			

if(i%2==0)
	{	for(min=k-1;min>=0;min--)
 278:	08 94       	sec
 27a:	e1 08       	sbc	r14, r1
 27c:	f1 08       	sbc	r15, r1
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	e8 16       	cp	r14, r24
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	f8 06       	cpc	r15, r24
 286:	11 f0       	breq	.+4      	; 0x28c <main+0x128>
 288:	e4 01       	movw	r28, r8
 28a:	f4 cf       	rjmp	.-24     	; 0x274 <main+0x110>
			if((min==0)&&(sec==0))
			{
			break;
			}
          }//for
PORTB=0x02;
 28c:	58 ba       	out	0x18, r5	; 24
 28e:	80 ed       	ldi	r24, 0xD0	; 208
 290:	97 e0       	ldi	r25, 0x07	; 7
 292:	f3 01       	movw	r30, r6
 294:	31 97       	sbiw	r30, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <main+0x130>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 298:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 29a:	d9 f7       	brne	.-10     	; 0x292 <main+0x12e>
_delay_ms(200);
PORTB=0x00;
 29c:	18 ba       	out	0x18, r1	; 24
 29e:	80 ed       	ldi	r24, 0xD0	; 208
 2a0:	97 e0       	ldi	r25, 0x07	; 7
 2a2:	f3 01       	movw	r30, r6
 2a4:	31 97       	sbiw	r30, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <main+0x140>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2a8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2aa:	d9 f7       	brne	.-10     	; 0x2a2 <main+0x13e>
 2ac:	c0 e0       	ldi	r28, 0x00	; 0
 2ae:	d0 e0       	ldi	r29, 0x00	; 0
secs=0;
k=0;
i=1;
for(int p=0;p<300;p++)
{
display1(1,1);
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	18 df       	rcall	.-464    	; 0xea <display1>
 2ba:	c6 01       	movw	r24, r12
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <main+0x158>
_delay_ms(1);
display1(2,2);
 2c0:	82 e0       	ldi	r24, 0x02	; 2
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	62 e0       	ldi	r22, 0x02	; 2
 2c6:	70 e0       	ldi	r23, 0x00	; 0
 2c8:	10 df       	rcall	.-480    	; 0xea <display1>
 2ca:	c6 01       	movw	r24, r12
 2cc:	01 97       	sbiw	r24, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <main+0x168>
_delay_ms(1);
display1(3,3);
 2d0:	83 e0       	ldi	r24, 0x03	; 3
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	63 e0       	ldi	r22, 0x03	; 3
 2d6:	70 e0       	ldi	r23, 0x00	; 0
 2d8:	08 df       	rcall	.-496    	; 0xea <display1>
 2da:	c6 01       	movw	r24, r12
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <main+0x178>
_delay_ms(1);
display1(4,4);
 2e0:	84 e0       	ldi	r24, 0x04	; 4
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	64 e0       	ldi	r22, 0x04	; 4
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	00 df       	rcall	.-512    	; 0xea <display1>
 2ea:	c6 01       	movw	r24, r12
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <main+0x188>
_delay_ms(1);
display1(5,5);
 2f0:	85 e0       	ldi	r24, 0x05	; 5
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	65 e0       	ldi	r22, 0x05	; 5
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	f8 de       	rcall	.-528    	; 0xea <display1>
 2fa:	c6 01       	movw	r24, r12
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <main+0x198>
_delay_ms(1);
display1(2,6);
 300:	82 e0       	ldi	r24, 0x02	; 2
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	66 e0       	ldi	r22, 0x06	; 6
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	f0 de       	rcall	.-544    	; 0xea <display1>
 30a:	c6 01       	movw	r24, r12
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <main+0x1a8>
PORTB=0x00;
_delay_ms(200);
secs=0;
k=0;
i=1;
for(int p=0;p<300;p++)
 310:	21 96       	adiw	r28, 0x01	; 1
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	cc 32       	cpi	r28, 0x2C	; 44
 316:	d8 07       	cpc	r29, r24
 318:	09 f0       	breq	.+2      	; 0x31c <main+0x1b8>
 31a:	ca cf       	rjmp	.-108    	; 0x2b0 <main+0x14c>
 31c:	48 cf       	rjmp	.-368    	; 0x1ae <main+0x4a>

0000031e <_exit>:
 31e:	f8 94       	cli

00000320 <__stop_program>:
 320:	ff cf       	rjmp	.-2      	; 0x320 <__stop_program>
